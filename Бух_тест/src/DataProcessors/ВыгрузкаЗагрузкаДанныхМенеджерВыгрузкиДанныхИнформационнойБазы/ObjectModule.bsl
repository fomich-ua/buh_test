#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВнутреннееСостояние

Перем ТекущийКонтейнер;
Перем ТекущиеОбработчики;
Перем ТекущиеВыгружаемыеТипы;
Перем ТекущиеИсключаемыеТипы;
Перем ТекущийСериализатор;
Перем ТекущийПотокЗаписиПересоздаваемыхСсылок;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать(Контейнер, Обработчики, ВыгружаемыеТипы, ИсключаемыеТипы, АннотируемыеТипы) Экспорт
	
	ТекущийКонтейнер = Контейнер;
	ТекущиеОбработчики = Обработчики;
	ТекущиеВыгружаемыеТипы = ВыгружаемыеТипы;
	ТекущиеИсключаемыеТипы = ИсключаемыеТипы;
	
	ТекущийСериализатор = СериализаторXDTOСАннотациейТипов(АннотируемыеТипы);
	
	ТекущийПотокЗаписиПересоздаваемыхСсылок = Обработки.ВыгрузкаЗагрузкаДанныхПотокЗаписиПересоздаваемыхСсылок.Создать();
	ТекущийПотокЗаписиПересоздаваемыхСсылок.Инициализировать(ТекущийКонтейнер, ТекущийСериализатор);
	
КонецПроцедуры

Процедура ВыгрузитьДанные() Экспорт
	
	Для Каждого ОбъектМетаданных Из ТекущиеВыгружаемыеТипы Цикл
		
		Если ТекущиеИсключаемыеТипы.Найти(ОбъектМетаданных) <> Неопределено Тогда
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru='ВыгрузкаЗагрузкаДанных.ВыгрузкаОбъектаПропущена';uk='ВыгрузкаЗагрузкаДанных.ВыгрузкаОбъектаПропущена'", Метаданные.ОсновнойЯзык.КодЯзыка),
				УровеньЖурналаРегистрации.Информация,
				ОбъектМетаданных,
				,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Выгрузка данных объекта метаданных %1 пропущена, т.к. он включен в"
"список объектов метаданных, исключаемых из выгрузки и загрузки данных';uk=""Вивантаження даних об'єкта метаданих %1 пропущене, оскільки він включений у"
"список об'єктів метаданих, що виключаються з вивантаження і завантаження даних""", Метаданные.ОсновнойЯзык.КодЯзыка),
					ОбъектМетаданных.ПолноеИмя()
				)
			);
			
			Продолжить;
			
		КонецЕсли;
		
		МенеджерВыгрузкиОбъекта = Обработки.ВыгрузкаЗагрузкаДанныхМенеджерВыгрузкиДанныхОбъектаИнформационнойБазы.Создать();
		
		МенеджерВыгрузкиОбъекта.Инициализировать(
			ТекущийКонтейнер,
			ОбъектМетаданных,
			ТекущиеОбработчики,
			ТекущийСериализатор,
			ТекущийПотокЗаписиПересоздаваемыхСсылок);
		
		МенеджерВыгрузкиОбъекта.ВыгрузитьДанные();
		
		МенеджерВыгрузкиОбъекта.Закрыть();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура Закрыть() Экспорт
	
	ТекущийПотокЗаписиПересоздаваемыхСсылок.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФукнции

////////////////////////////////////////////////////////////////////////////////
// Аннотация ссылок при выгрузке

// Возвращает СериализаторXDTO с аннотацией типов.
//
// Возвращаемое значение:
//	СериализаторXDTO - сериализатор.
//
Функция СериализаторXDTOСАннотациейТипов(Знач АннотируемыеТипы)
	
	Если АннотируемыеТипы.Количество() > 0 Тогда
		
		Фабрика = ПолучитьФабрикуСУказаниемТипов(АннотируемыеТипы);
		Возврат Новый СериализаторXDTO(Фабрика);
		
	Иначе
		
		Возврат СериализаторXDTO;
		
	КонецЕсли;
	
КонецФункции

// Возврашает фабрику с указанием типов.
//
// Параметры:
//	Типы - ФиксированныйМассив (Метаданные) - массив типов.
//
// Возвращаемое значение:
//	ФабрикаXDTO - фабрика.
//
Функция ПолучитьФабрикуСУказаниемТипов(Знач Типы)
	
	НаборСхем = ФабрикаXDTO.ЭкспортСхемыXML("http://v8.1c.ru/8.1/data/enterprise/current-config");
	Схема = НаборСхем[0];
	Схема.ОбновитьЭлементDOM();
	
	УказанныеТипы = Новый Соответствие;
	Для каждого Тип Из Типы Цикл
		УказанныеТипы.Вставить(ВыгрузкаЗагрузкаДанныхСлужебный.XMLТипСсылки(Тип), Истина);
	КонецЦикла;
	
	ПространствоИмен = Новый Соответствие;
	ПространствоИмен.Вставить("xs", "http://www.w3.org/2001/XMLSchema");
	РазыменовательПространствИменDOM = Новый РазыменовательПространствИменDOM(ПространствоИмен);
	ТекстXPath = "/xs:schema/xs:complexType/xs:sequence/xs:element[starts-with(@type,'tns:')]";
	
	Запрос = Схема.ДокументDOM.СоздатьВыражениеXPath(ТекстXPath,
		РазыменовательПространствИменDOM);
	Результат = Запрос.Вычислить(Схема.ДокументDOM);

	Пока Истина Цикл
		
		УзелПоля = Результат.ПолучитьСледующий();
		Если УзелПоля = Неопределено Тогда
			Прервать;
		КонецЕсли;
		АтрибутТип = УзелПоля.Атрибуты.ПолучитьИменованныйЭлемент("type");
		ТипБезNSПрефикса = Сред(АтрибутТип.ТекстовоеСодержимое, СтрДлина("tns:") + 1);
		
		Если УказанныеТипы.Получить(ТипБезNSПрефикса) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		УзелПоля.УстановитьАтрибут("nillable", "true");
		УзелПоля.УдалитьАтрибут("type");
	КонецЦикла;
	
	ЗаписьXML = Новый ЗаписьXML;
	ИмяФайлаСхемы = ПолучитьИмяВременногоФайла("xsd");
	ЗаписьXML.ОткрытьФайл(ИмяФайлаСхемы);
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(Схема.ДокументDOM, ЗаписьXML);
	ЗаписьXML.Закрыть();
	
	Фабрика = СоздатьФабрикуXDTO(ИмяФайлаСхемы);
	
	ВыгрузкаЗагрузкаДанныхСлужебный.УдалитьВременныйФайл(ИмяФайлаСхемы);
	
	Возврат Фабрика;
	
КонецФункции

#КонецОбласти

#КонецЕсли
