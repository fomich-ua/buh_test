&НаКлиенте
Перем ИтерацияПроверки;
&НаКлиенте
Перем АдресХранилища;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаШапка.Видимость = Не Параметры.РежимПроверки;
	Элементы.ГруппаШапкаРежимПроверки.Видимость = Параметры.РежимПроверки;
	
	ХранилищеРезультатаОбработкиЗапросов = Параметры.АдресХранилища;
	РезультатОбработкиЗапросов = ПолучитьИзВременногоХранилища(ХранилищеРезультатаОбработкиЗапросов);
	АдресХранилищаНаСервере = ПоместитьВоВременноеХранилище(РезультатОбработкиЗапросов, ЭтотОбъект.УникальныйИдентификатор);
	
	ТребуетсяВнесениеИзмененийВПрофиляхБезопасности = РезультатОбработкиЗапросов.ТребуетсяВнесениеИзмененийВПрофиляхБезопасности;
	
	Если Не ТребуетсяВнесениеИзмененийВПрофиляхБезопасности Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеРазрешений = РезультатОбработкиЗапросов.Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТребуетсяВнесениеИзмененийВПрофиляхБезопасности Тогда
		
		АдресХранилища = АдресХранилищаНаСервере;
		
	Иначе
		
		Закрыть(КодВозвратаДиалога.Пропустить);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРазрешения Тогда
		
		ОтправитьЗапросыВМС(АдресХранилища);
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжиданиеОтвета;
		
		ИтерацияПроверки = 1;
		ПодключитьОбработчикОжидания("ПроверитьОбработкуЗапросовВМС", 1);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОжиданиеОтвета Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаРазрешения;
		Элементы.ФормаНазад.Видимость = Ложь;
		Элементы.ФормаРазрешить.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОтправитьЗапросыВМС(Знач АдресХранилища)
	
	ИдентификаторыЗапросов = ИдентификаторыЗапросов(АдресХранилища);
	Сериализация = Обработки.НастройкаРазрешенийНаИспользованиеВнешнихРесурсовВМоделиСервиса.СериализоватьЗапросыНаИспользованиеВнешнихРесурсов(ИдентификаторыЗапросов);
	УдаленноеАдминистрированиеБТССлужебный.ОтправитьЗапросыНаИспользованиеВнешнихРесурсов(Сериализация);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОбработкуЗапросовВМС()
	
	Попытка
		Готовность = ЗапросыОбработаныВМС(АдресХранилища);
	Исключение
		ОтключитьОбработчикОжидания("ПроверитьОбработкуЗапросовВМС");
		Закрыть();
		ВызватьИсключение;
	КонецПопытки;
	
	Если Готовность Тогда
		ОтключитьОбработчикОжидания("ПроверитьОбработкуЗапросовВМС");
		Закрыть(КодВозвратаДиалога.ОК);
	Иначе
		
		ИтерацияПроверки = ИтерацияПроверки + 1;
		
		Если ИтерацияПроверки = 2 Тогда
			ОтключитьОбработчикОжидания("ПроверитьОбработкуЗапросов");
			ПодключитьОбработчикОжидания("ПроверитьОбработкуЗапросов", 5);
		ИначеЕсли ИтерацияПроверки = 3 Тогда
			ОтключитьОбработчикОжидания("ПроверитьОбработкуЗапросов");
			ПодключитьОбработчикОжидания("ПроверитьОбработкуЗапросов", 12);
		Иначе
			ОтключитьОбработчикОжидания("ПроверитьОбработкуЗапросов");
			ПодключитьОбработчикОжидания("ПроверитьОбработкуЗапросов", 30);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапросыОбработаныВМС(Знач АдресХранилища)
	
	ИдентификаторыЗапросов = ПолучитьИзВременногоХранилища(АдресХранилища);
	РезультатОбработки = Обработки.НастройкаРазрешенийНаИспользованиеВнешнихРесурсовВМоделиСервиса.РезультатОбработкиЗапросовВУправляющемПриложении(ИдентификаторыЗапросов);
	Если РезультатОбработки.Количество() = ИдентификаторыЗапросов.Количество() Тогда
		
		Ошибка = Ложь;
		ТекстОшибки = "";
		
		Для Каждого ЭлементРезультата Из РезультатОбработки Цикл
			
			Если ЭлементРезультата.РезультатОбработки = Перечисления.РезультатыОбработкиЗапросовНаИспользованиеВнешнихРесурсовВМоделиСервиса.ЗапросОтклонен Тогда
				
				Если Не Ошибка Тогда
					Ошибка = Истина;
				КонецЕсли;
				
				Если Не ПустаяСтрока(ТекстОшибки) Тогда
					ТекстОшибки = ТекстОшибки + Символы.ПС + Символы.ВК;
				КонецЕсли;
				
				ТекстОшибки = ТекстОшибки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Ошибка обработки запроса %1: %2!';uk='Помилка обробки запиту %1: %2!'"),
					Строка(ЭлементРезультата.ИдентификаторЗапроса),
					ЭлементРезультата.ИнформацияОбОшибке
				);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если Ошибка Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИдентификаторыЗапросов(Знач АдресХранилища)
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Возврат Результат.ИдентификаторыЗапросов;
	
КонецФункции

#КонецОбласти