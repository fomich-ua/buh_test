
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//////////////////////////////////////////////////////////////////
/// Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Список перечислений
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Удостоверение";
	КомандаПечати.Представление = НСтр("ru='Удостоверение';uk='Посвідчення'");
	
	// Список перечислений в Microsoft Word
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Удостоверение";
	КомандаПечати.Представление = НСтр("ru='Удостоверение в Microsoft Word';uk='Посвідчення в Microsoft Word'");
	КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента.DOCX;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Удостоверение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Удостоверение", НСтр("ru='Удостоверение';uk='Посвідчення'"), ПечатьУдостоверение(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПечатьУдостоверение(МассивОбъектов, ОбъектыПечати)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;   
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КомандировкиОрганизаций_Удостоверение";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.КомандировкиОрганизаций.ПФ_MXL_Удостоверение");
	
	мДлинаСуток = 86400;

	ПервыйДокумент = Истина;
	// получаем данные для печати
	Для Каждого Ссылка Из МассивОбъектов Цикл
		Выборка = ВыборкаДляПечати(Ссылка);
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		Пока Выборка.Следующий() Цикл
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйДокумент = Ложь;
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			ОбластьПечати = Макет.ПолучитьОбласть("Форма");
			ОбластьПечати.Параметры.Заполнить(Выборка);
			
			ОбластьПечати.Параметры.СтранаНазначения = Ссылка.СтранаНазначения;
			ОбластьПечати.Параметры.ОрганизацияНазначения = Ссылка.ОрганизацияНазначения;
			
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Выборка.Организация, Выборка.Работник, Выборка.ДатаДок);
			ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
			ОбластьПечати.Параметры.ПодразделениеРаботника = ДанныеФизЛица.ПодразделениеОрганизации;
			ОбластьПечати.Параметры.Должность = ДанныеФизЛица.Должность;
			ОбластьПечати.Параметры.ДокументСерия = ДанныеФизЛица.Серия;
			ОбластьПечати.Параметры.ДокументНомер = ДанныеФизЛица.Номер;
			ОбластьПечати.Параметры.ФИОРуководителя = ОтветственныеЛица.Руководитель;
			
			ОбластьПечати.Параметры.НазваниеОрганизации = Выборка.Организация.НаименованиеПолное;
			ОбластьПечати.Параметры.Продолжительность = ?(НЕ ЗначениеЗаполнено(Выборка.ДатаОкончания),"",Цел((Выборка.ДатаОкончания - Выборка.ДатаНачала + 1) / мДлинаСуток)+1);
			ТабличныйДокумент.Вывести(ОбластьПечати);
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла;
	

	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по документу
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ЗаявлениеНаПрименениеЛьготы
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечати(Ссылка)
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Ссылка.МоментВремени());
	
	Запрос.Текст = "ВЫБРАТЬ
	|	КомандировкиОрганизацийРаботникиОрганизации.Ссылка,
	|	КомандировкиОрганизацийРаботникиОрганизации.НомерСтроки,
	|	КомандировкиОрганизацийРаботникиОрганизации.ДатаНачала,
	|	КомандировкиОрганизацийРаботникиОрганизации.ДатаОкончания,
	|	КомандировкиОрганизацийРаботникиОрганизации.Цель,
	|	КомандировкиОрганизацийРаботникиОрганизации.ИсточникФинансирования,
	|	КомандировкиОрганизацийРаботникиОрганизации.Сотрудник,
	|	КомандировкиОрганизацийРаботникиОрганизации.Ссылка.Организация КАК Организация,
	|	КомандировкиОрганизацийРаботникиОрганизации.Ссылка.Номер КАК НомерДок,
	|	КомандировкиОрганизацийРаботникиОрганизации.Ссылка.Дата КАК ДатаДок,
	|	КомандировкиОрганизацийРаботникиОрганизации.Сотрудник.ФизическоеЛицо КАК Работник
	|ИЗ
	|	Документ.КомандировкиОрганизаций.РаботникиОрганизации КАК КомандировкиОрганизацийРаботникиОрганизации
	|ГДЕ
	|	КомандировкиОрганизацийРаботникиОрганизации.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выбрать();
	
	
КонецФункции

#КонецЕсли