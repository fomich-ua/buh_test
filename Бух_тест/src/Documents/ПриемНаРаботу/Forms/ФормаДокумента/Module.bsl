///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Заполним дату приема
		Если Не ЗначениеЗаполнено(Объект.ДатаПриема) Тогда
			Объект.ДатаПриема = ТекущаяДатаСеанса();
		КонецЕсли; 
		
		// Очистим реквизит Сотрудник, если он уже принят
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) И Параметры.ЗначениеКопирования.Проведен Тогда
			Объект.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
			Объект.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		КонецЕсли; 
		
		// Заполним реквизиты из значений заполнения
		Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			Объект.Организация = Параметры.Организация;
		КонецЕсли;
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		Если Параметры.Свойство("ДатаПриема") И ЗначениеЗаполнено(Параметры.ДатаПриема) Тогда 
			Объект.ДатаПриема = Параметры.ДатаПриема;
		КонецЕсли;
		Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда 
			Объект.Подразделение = Параметры.Подразделение;
		КонецЕсли;
		Если Параметры.Свойство("Должность") И ЗначениеЗаполнено(Параметры.Должность) Тогда 
			Объект.Должность = Параметры.Должность;
		КонецЕсли;
		Если Параметры.Свойство("Начисления") И Параметры.Начисления.Количество() > 0 Тогда 
			Объект.Начисления.Загрузить(Параметры.Начисления.Выгрузить());
		КонецЕсли;
			
		//*Если Объект.Начисления.Количество() = 0 Тогда
		//	ПовременныеНачисления = РасчетЗарплаты.НачисленияПоКатегории(
		//		Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда, Новый Структура("ПометкаУдаления", Ложь));
		//	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(Объект.Начисления, ПовременныеНачисления, "Начисление");
		//КонецЕсли;
		
		УстановитьФункциональныеОпцииФормы();
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			//*ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
			УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
			УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
			
		Иначе
			УстановитьКатегориюЕСВПоУмолчанию(ЭтаФорма);

		КонецЕсли; 
		
		ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
		
	КонецЕсли;
	
	//*ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	
	УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьФункциональныеОпцииФормы();
	
	ВидЗанятостиПредыдущий = ТекущийОбъект.ВидЗанятости;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	КадровыйУчетКлиент.ОповеститьОбИзмененииРабочегоМеста(ЭтаФорма);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ГоловнаяОрганизацияСотрудника = ГоловнаяОрганизацияСотрудника(Объект.Сотрудник);
	УстановитьСвязиПараметровВыбораОрганизации();
	УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗанятостиПриИзменении(Элемент)
	
	СотрудникиКлиент.ПроверитьКонфликтыВидаЗанятостиССуществующимиСотрудниками(
		Объект.Сотрудник,
		Объект.ФизическоеЛицо,
		Объект.Организация,
		Объект.ВидЗанятости,
		Объект.ДатаПриема);
		
	ВидЗанятостиПредыдущий = Объект.ВидЗанятости;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

///////////////////////////////////////////////////////////////////////////////
// УНИВЕРСАЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, Объект.ДатаПриема);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	КадровыйУчетФормы.ЗаполнитьОтветственныхЛицПоОрганизации(ЭтаФорма);
	УстановитьФункциональныеОпцииФормы();
	УстановитьВидЗанятостиНовогоСотрудника(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидЗанятостиНовогоСотрудника(Форма)
	
	Форма.Объект.ВидЗанятости = СотрудникиВызовСервера.ПолучитьВидЗанятостиДляНовогоСотрудника(Форма.Объект.Сотрудник, Форма.Объект.Организация);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГоловнаяОрганизацияСотрудника(Сотрудник)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "ГоловнаяОрганизация");
	
КонецФункции

&НаКлиенте
Процедура УстановитьСвязиПараметровВыбораОрганизации()
	
	СотрудникЗаполнен = ЗначениеЗаполнено(Объект.Сотрудник);
	СвязиПараметровВыбораОрганизацииУстановлены = Элементы.Организация.СвязиПараметровВыбора.Количество() > 0;
	
	НеобходимоПереустановитьСвязиПараметровВыбораОрганизации = 
		СотрудникЗаполнен И НЕ СвязиПараметровВыбораОрганизацииУстановлены
		ИЛИ НЕ СотрудникЗаполнен И СвязиПараметровВыбораОрганизацииУстановлены;
		
	Если НеобходимоПереустановитьСвязиПараметровВыбораОрганизации Тогда
			
		УстановитьСвязиПараметровВыбораОрганизацииНаСервере();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораОрганизацииНаСервере()
	
	СвязиПараметровВыбора = Новый Массив;
	Если ЗначениеЗаполнено(ГоловнаяОрганизацияСотрудника) Тогда
		Связь = Новый СвязьПараметраВыбора("Отбор.ГоловнаяОрганизация", "ГоловнаяОрганизацияСотрудника");
		СвязиПараметровВыбора.Добавить(Связь);
	КонецЕсли; 
		
	Элементы.Организация.СвязиПараметровВыбора  = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятНаНовоеРабочееМестоПриИзменении(Элемент)
	
	УстановитьВидимостьДатыСозданияРМ(ЭтаФорма)
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДатыСозданияРМ(Форма)
	
	Форма.Элементы.ДатаСозданияРабочегоМеста.Видимость = Форма.Объект.ПринятНаНовоеРабочееМесто
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДатыСозданияРМ(ЭтаФорма)

КонецПроцедуры
&НаСервереБезКонтекста
Процедура УстановитьКатегориюЕСВПоУмолчанию(Форма)
	
	Форма.Объект.КатегорияЕСВ = КадровыйУчет.КатегорияЕСВПоУмолчанию(Форма.Объект.Организация);
		
КонецПроцедуры
