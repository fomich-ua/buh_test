
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("ПредыдущийКвартал, Организация, Ответственный",
		"Объект.ПериодРегистрации",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
	КонецЕсли;
	
	ПериодНачисленияСтрокой = Формат(Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");
			
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПоВзаиморасчетам(Команда)
		
	Если Объект.Контрагенты.Количество() > 0 
		Или Объект.НДФЛ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличные части будут очищены."
"Продолжить?';uk='Табличні частини будуть очищені."
"Продовжити?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьПоВзаиморасчетам", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоВзаиморасчетамСервер(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьПоВзаиморасчетам(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоВзаиморасчетамСервер(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьПоОплате(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоВзаиморасчетамСервер(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВзаиморасчетамСервер(ПоВзаиморасчетам)
	
		
	Объект.Контрагенты.Очистить(); 
	Объект.НДФЛ.Очистить();

	Запрос = Новый Запрос;
	
	Если НЕ ПоВзаиморасчетам Тогда
		ТекстЗапроса = "                                                                                        
		|ВЫБРАТЬ
		|	ОстакиОбороты.Контрагент	КАК Контрагент,
		|	СУММА(ОстакиОбороты.УдержНДФЛ)  КАК УдержНДФЛ,
		|	СУММА(ВЫБОР	КОГДА (ОстакиОбороты.ОбДт > ОстакиОбороты.ОбКт) ТОГДА ОстакиОбороты.ОбДт - ОстакиОбороты.ОбКт ИНАЧЕ 0 КОНЕЦ
		|		)  КАК НачисленоДохода
		|	
		|	ИЗ(
		|		ВЫБРАТЬ
		|			Хозрасчетный.Контрагент	КАК Контрагент,
		|			Хозрасчетный.Договор	КАК Договор,
		|			СУММА(Хозрасчетный.УдержНДФЛ)  КАК УдержНДФЛ,
		|			СУММА(Хозрасчетный.ОбКт)  КАК ОбКт,
		|			СУММА(Хозрасчетный.ОбДт)  КАК ОбДт
		|		ИЗ (
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет в (&Счет6411)
		|	               			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|	               			ИНАЧЕ 0 КОНЕЦ                         КАК УдержНДФЛ,
		|					ХозрасчетныйОбороты.СуммаОборотДт  КАК ОбДт,
		|					ХозрасчетныйОбороты.СуммаОборотКт  КАК ОбКт
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетов), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|					И (ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&СписокКорСчетов) или ХозрасчетныйОбороты.КорСчет в (&Счет6411))
		|		  ) КАК Хозрасчетный
		|
		|		СГРУППИРОВАТЬ ПО 
		|			Хозрасчетный.Контрагент,
		|			Хозрасчетный.Договор
		|	) КАК ОстакиОбороты	
		|
		|ГДЕ
		|	ОстакиОбороты.обДт > 0 ИЛИ ОстакиОбороты.ОбКт > 0
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОстакиОбороты.Контрагент    
		|   
		|";
	Иначе
		// по оплате
		ТекстЗапроса = "                                                                                        
		|ВЫБРАТЬ
		|	ОстакиОбороты.Контрагент	КАК Контрагент,
		|	СУММА(ОстакиОбороты.УдержНДФЛ)  КАК УдержНДФЛ,
		|	СУММА(ВЫБОР	КОГДА (ОстакиОбороты.ОбКт -ОстакиОбороты.ОстДт + ВЫБОР	КОГДА ОстакиОбороты.Возврат < 0 ТОГДА ОстакиОбороты.Возврат ИНАЧЕ 0 КОНЕЦ )
		|	> (ОстакиОбороты.обДт - ОстакиОбороты.ОстКт - ВЫБОР	КОГДА ОстакиОбороты.Возврат > 0 ТОГДА ОстакиОбороты.Возврат ИНАЧЕ 0 КОНЕЦ)
		|			ТОГДА (ОстакиОбороты.ОбКт-ОстакиОбороты.ОстДт  + ВЫБОР	КОГДА ОстакиОбороты.Возврат < 0 ТОГДА ОстакиОбороты.Возврат ИНАЧЕ 0 КОНЕЦ)  // отнимаем возвраты товаром
		|			ИНАЧЕ (ОстакиОбороты.обДт -ОстакиОбороты.ОстКт - ВЫБОР	КОГДА ОстакиОбороты.Возврат > 0 ТОГДА ОстакиОбороты.Возврат ИНАЧЕ 0 КОНЕЦ)  // отнимаем возвраты деньгами  
		|		КОНЕЦ)  КАК НачисленоДохода
		|	
		|	ИЗ(
		
		|		ВЫБРАТЬ
		|			Хозрасчетный.Контрагент	КАК Контрагент,
		|			Хозрасчетный.Договор	КАК Договор,
		|			СУММА(Хозрасчетный.УдержНДФЛ)  КАК УдержНДФЛ,
		|			СУММА(Хозрасчетный.ОстКт)  КАК ОстКт,
		|			СУММА(Хозрасчетный.ОстДт)  КАК ОстДт,
		|			СУММА(Хозрасчетный.ОбКт)  КАК ОбКт,
		|			СУММА(Хозрасчетный.ОбДт)  КАК ОбДт,
		|			СУММА(Хозрасчетный.Возврат)  КАК Возврат
		|		ИЗ (
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|	               	0                         		КАК УдержНДФЛ,
		|					ХозрасчетныйОбороты.СуммаОстатокДт  КАК ОстДт,
		|					ХозрасчетныйОбороты.СуммаОстатокКт  КАК ОстКт,
		|					0  КАК ОбДт,
		|					0  КАК ОбКт,
		|					0  КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоПериода, Счет В ИЕРАРХИИ (&СписокСчетов), , Организация = &парамОрганизация) КАК ХозрасчетныйОбороты
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|               //авансы
		|				ОБЪЕДИНИТЬ ВСЕ
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет в (&Счет6411)
		|	               			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|	               			ИНАЧЕ 0 КОНЕЦ                         КАК УдержНДФЛ,
		|					0  КАК ОстДт,
		|					0  КАК ОстКт,
		|					ХозрасчетныйОбороты.СуммаОборотДт  КАК ОбДт,
		|					0  КАК ОбКт,
		|					0  КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетовАвансы), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|               //возврат аванса
		|				ОБЪЕДИНИТЬ ВСЕ
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					0  КАК УдержНДФЛ,
		|					0  КАК ОстДт,
		|					0  КАК ОстКт,
		|					0  КАК ОбДт,
		|					0  КАК ОбКт,
		|					ХозрасчетныйОбороты.СуммаОборотКт  КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетовАвансы) ИЛИ Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|                  И ХозрасчетныйОбороты.КорСчет в иерархии (&СписокКорСчетов)
		|               //Поставка
		|				ОБЪЕДИНИТЬ ВСЕ
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет в (&Счет6411)
		|	               			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|	               			ИНАЧЕ 0 КОНЕЦ                         КАК УдержНДФЛ,
		|					0  КАК ОстДт,
		|					0  КАК ОстКт,
		|					0  КАК ОбДт,
		|					ХозрасчетныйОбороты.СуммаОборотКт  КАК ОбКт,
		|					0  КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|				  И ХозрасчетныйОбороты.КорСчет НЕ в (&СписокСчетовАвансы)
		|				  И ХозрасчетныйОбороты.КорСчет НЕ в (&СписокСчетовПоставщики)
		|				  И ХозрасчетныйОбороты.КорСчет НЕ в иерархии (&СписокКорСчетов)
		|               //оплата
		|				ОБЪЕДИНИТЬ ВСЕ
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет в (&Счет6411)
		|	               			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|	               			ИНАЧЕ 0 КОНЕЦ                         КАК УдержНДФЛ,
		|					0  КАК ОстДт,
		|					0  КАК ОстКт,
		|					ХозрасчетныйОбороты.СуммаОборотДт  КАК ОбДт,
		|					0  КАК ОбКт,
		|					0  КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|				  И ХозрасчетныйОбороты.КорСчет  в иерархии (&СписокКорСчетов)
		|               //возврат поставки
		|				ОБЪЕДИНИТЬ ВСЕ
		|				ВЫБРАТЬ
		|					ХозрасчетныйОбороты.Субконто1	КАК Контрагент,
		|					ХозрасчетныйОбороты.Субконто2	КАК Договор,
		|					ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет в (&Счет6411)
		|	               			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|	               			ИНАЧЕ 0 КОНЕЦ                         КАК УдержНДФЛ,
		|					0  КАК ОстДт,
		|					0  КАК ОстКт,
		|					0  КАК ОбДт,
		|					0  КАК ОбКт,
		|					-ХозрасчетныйОбороты.СуммаОборотДт КАК Возврат
		|					
		|				ИЗ РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ДЕНЬ, Счет В ИЕРАРХИИ (&СписокСчетовПоставщики), , Организация = &парамОрганизация, , ) КАК ХозрасчетныйОбороты
		|
		|				ГДЕ ХозрасчетныйОбороты.Субконто1.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|				  И (ХозрасчетныйОбороты.КорСчет не в  (&СписокСчетовАвансы))
		|				  И (ХозрасчетныйОбороты.КорСчет не в иерархии (&СписокКорСчетов))
		|				  И (ХозрасчетныйОбороты.КорСчет не в (&СписокСчетовПоставщики))
		|		  ) КАК Хозрасчетный
		|
		|		СГРУППИРОВАТЬ ПО 
		|			Хозрасчетный.Контрагент,
		|			Хозрасчетный.Договор	
		|	) КАК ОстакиОбороты	
		|
		|ГДЕ
		|	(ВЫБОР	КОГДА (ОстакиОбороты.ОбКт-ОстакиОбороты.ОстДт) > (ОстакиОбороты.обДт -ОстакиОбороты.ОстКт)
		|			ТОГДА (ОстакиОбороты.ОбКт-ОстакиОбороты.ОстДт)
		|			ИНАЧЕ (ОстакиОбороты.обДт -ОстакиОбороты.ОстКт)
		|		КОНЕЦ) > 0
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОстакиОбороты.Контрагент    
		|   
		|";
    КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	                                
	Запрос.УстановитьПараметр("парамОрганизация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Началоквартала(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(Объект.ПериодРегистрации) );
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСОтечественнымиПоставщиками);				//631
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУчастникамиПФГ);				//633
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторамиВНациональнойВалюте);	//6851
	СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансамВНациональнойВалюте);	//3711
	
	СписокСчетовБанкКасса = Новый СписокЗначений;
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.Касса);			//301
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.СчетаВБанках);	//311
	СписокСчетовБанкКасса.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВНациональнойВалюте);	//3721
	
	СписокСчетовАвансы = Новый СписокЗначений;
	СписокСчетовАвансы.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансамВНациональнойВалюте);	//3711
	
	СписокСчетовПоставщики = Новый СписокЗначений;
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСОтечественнымиПоставщиками);				//631
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУчастникамиПФГ);				//633
	СписокСчетовПоставщики.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторамиВНациональнойВалюте);	//6851
	
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов);
	Запрос.УстановитьПараметр("Счет6411"		, ПланыСчетов.Хозрасчетный.РасчетыПоНДФЛ);
	Запрос.УстановитьПараметр("СписокКорСчетов"	, СписокСчетовБанкКасса);
	Запрос.УстановитьПараметр("СписокСчетовАвансы"	, СписокСчетовАвансы);
    Запрос.УстановитьПараметр("СписокСчетовПоставщики"	, СписокСчетовПоставщики);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ИНН = Выборка.Контрагент.КодПоЕДРПОУ;
		Если ИНН = Неопределено Тогда
			
			Сообщить (НСтр("ru='Внимание! Для контрагента - ЧП  ';uk='Увага! Для контрагента - ПП  '") + Выборка.Контрагент + НСтр("ru=' не заполнен идентификационный номер (реквизит ДРФО в справочнике Контрагенты). Информация о нем не включается в ведомость!';uk=' не заповнений ідентифікаційний номер (реквізит ДРФО в довіднику Контрагенти). Інформація про нього не включається у відомість!'"));
			
		КонецЕсли;
		
		ТекСтрока = Объект.НДФЛ.Добавить();
			
		ТекСтрока.Контрагент = Выборка.Контрагент;
		ТекСтрока.ВидДохода = Справочники.ВидыДоходовНДФЛ.Код42;
			
		ТекСтрока.Доход = Выборка.НачисленоДохода;
		ТекСтрока.Налог = Выборка.УдержНДФЛ;
	КонецЦикла; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОплате(Команда)
	
		
	Если Объект.Контрагенты.Количество() > 0 
		Или Объект.НДФЛ.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Табличные части будут очищены."
"Продолжить?';uk='Табличні частини будуть очищені."
"Продовжити?'");
		
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьПоОплате", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьПоВзаиморасчетамСервер(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойПриИзменении(Элемент)
	
	ПериодНачисленияСтрокой = Формат(ЭтотОбъект.Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");

КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода, ВидПериода",
		НачалоКвартала(ЭтотОбъект.Объект.ПериодРегистрации),
		КонецКвартала(ЭтотОбъект.Объект.ПериодРегистрации),
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Квартал"));
		
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаКвартал", ПараметрыВыбора, Элементы.ПериодНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияСтрокойОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Объект.ПериодРегистрации = РезультатВыбора.НачалоПериода;
	
	ПериодНачисленияСтрокой = Формат(ЭтотОбъект.Объект.ПериодРегистрации, "ДФ='q ''квартал'' yyyy'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПериодРегистрацииПриИзменении()

	ОбработатьИзменениеПериодРегистрацииНаСервере();

КонецПроцедуры

&НаСервере
Функция ЕстьЗаполненныеТабличныеЧасти()
	
	ДанныеВТЧЕсть = Ложь;
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Если Объект[ИмяТабличнойЧасти].Количество() > 0 Тогда
			ДанныеВТЧЕсть = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ДанныеВТЧЕсть;
	
КонецФункции

&НаСервере
Функция СписокТабличныхЧастейДокумента()
	
	СписокТабличныхЧастей = Новый Массив;
	
	СписокТабличныхЧастей.Добавить("Контрагенты");
	СписокТабличныхЧастей.Добавить("НДФЛ");
	
	Возврат СписокТабличныхЧастей;
	
КонецФункции


&НаСервере
Процедура ОбработатьИзменениеПериодРегистрацииНаСервере()

	Если ЕстьЗаполненныеТабличныеЧасти() Тогда
		ОчиститьТабличныеЧасти();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТабличныеЧасти()
	
	СписокТабличныхЧастей = СписокТабличныхЧастейДокумента();
	
	Для каждого ИмяТабличнойЧасти Из СписокТабличныхЧастей Цикл
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЦикла;
	

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбработатьИзменениеОрганизацииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()

	ОчиститьТабличныеЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
КонецПроцедуры



