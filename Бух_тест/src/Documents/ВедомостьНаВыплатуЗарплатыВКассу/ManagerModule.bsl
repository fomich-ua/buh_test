
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//////////////////////////////////////////////////////////////////
/// Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ведомость";
	КомандаПечати.Представление = НСтр("ru='Ведомость';uk='Відомість'");
	
	// Ведомость в Microsoft Word
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Ведомость";
	КомандаПечати.Представление = НСтр("ru='Ведомость в Microsoft Word';uk='Відомість в Microsoft Word'");
	КомандаПечати.ФорматСохранения = ТипФайлаТабличногоДокумента.DOCX;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru='Реестр документов ""Ведомость на выплату зарплаты""';uk='Реєстр документів ""Відомість на виплату зарплати""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;

	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Ведомость") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Ведомость", НСтр("ru='Ведомость на выплату зарплаты';uk='Відомість на виплату зарплати'"), ПечатьВедомость(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СформироватьСписокСчетов(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст ="
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно.СчетУчета
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.ЗарплатаПодробно КАК ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно
	|ГДЕ
	|	ВедомостьНаВыплатуЗарплатыВКассуЗарплатаПодробно.Ссылка = &Ссылка";
	
	ВыборкаСчетов = Запрос.Выполнить().Выбрать();
	
	СписокСчетов = ""; Разделитель = "";
	
	Пока ВыборкаСчетов.Следующий() Цикл
		СписокСчетов = СписокСчетов + Разделитель + Строка(ВыборкаСчетов.СчетУчета);
		Разделитель = ", ";
	КонецЦикла;	
	
	Возврат СписокСчетов;


КонецФункции

Функция ПечатьВедомость(МассивОбъектов, ОбъектыПечати)
	                          
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВедомостьНаВыплатуЗарплатыВКассу_Ведомость";
	ТабличныйДокумент.ПолеСлева = 15;
	ТабличныйДокумент.ПолеСправа = 15;
	
	КодЯзыкаПечать = "uk";	
	
	// получаем данные для печати
	ВыборкаШапок = ВыборкаДляПечатиШапки(МассивОбъектов);
	ВыборкаСтрок = ВыборкаДляПечатиТаблицы(МассивОбъектов);
	
	Пока ВыборкаШапок.Следующий() Цикл
		Если ВыборкаШапок.Дата >= Дата('20180105') Тогда
			Вариант2018 = Истина;
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_UK_Ведомость_05012018");
		Иначе
			Макет = УправлениеПечатью.ПолучитьМакет("Документ.ВедомостьНаВыплатуЗарплатыВКассу.ПФ_MXL_Ведомость");
			Вариант2018 = Ложь;
		КонецЕсли;
		
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// подсчитываем количество страниц документа - для корректного разбиения на страницы
		ВсегоСтрокДокумента = ВыборкаСтрок.Количество();

		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
		ОбластьМакетаШапка			= Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогПоСтранице = Макет.ПолучитьОбласть("ИтогПоЛисту");
		ОбластьМакетаПодвал 		= Макет.ПолучитьОбласть("Подвал");
		
		// массив с двумя строками - для разбиения на страницы
	    ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьМакетаСтрока);
		ВыводимыеОбласти.Добавить(ОбластьМакетаИтогПоСтранице);
		
	  	ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ВыборкаШапок);
		ВалютаУчета =  Константы.ВалютаРегламентированногоУчета.Получить();

		Если Вариант2018 Тогда 
			ОбластьМакетаШапкаДокумента.Параметры.Дата    		= Нрег(Формат(ВыборкаШапок.ПериодРегистрации, "Л=uk_UA; ДФ='дд ММММ гггг'")) + " року";
			СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаПоДокументу, ВалютаУчета, КодЯзыкаПечать);
			СтрокаСуммы = СуммаПоДокументу + " (" + Цел(ВыборкаШапок.СуммаПоДокументу) + " грн " + Формат((ВыборкаШапок.СуммаПоДокументу - Цел(ВыборкаШапок.СуммаПоДокументу)) * 100, "ЧЦ=2; ЧН=00; ЧВН=") + " коп.)";
			ОбластьМакетаШапкаДокумента.Параметры.СуммаПоДокументу = СтрокаСуммы;  
		Иначе
			ОбластьМакетаШапкаДокумента.Параметры.СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаПоДокументу, ВалютаУчета,КодЯзыкаПечать);
		КонецЕсли;
		
		ОбластьМакетаШапкаДокумента.Параметры.НомерВедомости = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапок.Номер);
		
		Если ВыборкаШапок.СуммаЗадепонировано <> 0 Тогда
			Если Вариант2018 Тогда 
				СуммаПоДокументу  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаЗадепонировано, ВалютаУчета, КодЯзыкаПечать);
				СтрокаСуммы = СуммаПоДокументу + " (" + Цел(ВыборкаШапок.СуммаЗадепонировано) + " грн " + Формат((ВыборкаШапок.СуммаЗадепонировано - Цел(ВыборкаШапок.СуммаЗадепонировано)) * 100, "ЧЦ=2; ЧН=00; ЧВН=") + " коп.)";
				ОбластьМакетаШапкаДокумента.Параметры.СуммаЗадепонировано = СтрокаСуммы;
			Иначе
				ОбластьМакетаШапкаДокумента.Параметры.СуммаЗадепонировано  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ВыборкаШапок.СуммаЗадепонировано, ВалютаУчета,КодЯзыкаПечать);
			КонецЕсли;	
		КонецЕсли;	
				
		ОбластьМакетаШапкаДокумента.Параметры.Счет			 = СформироватьСписокСчетов(ВыборкаШапок.Ссылка);
		Если Вариант2018 Тогда
			ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты    = Нрег(Формат(ВыборкаШапок.ПериодРегистрации, "Л=uk_UA; ДФ='ММММ гггг'")) + " року";
		Иначе	
			ОбластьМакетаШапкаДокумента.Параметры.ДатаВыплаты    = Нрег(Формат(ВыборкаШапок.ПериодРегистрации, "Л=uk_UA; ДФ='ММММ гггг р.'"));
		КонецЕсли;	

		ТабличныйДокумент.Вывести(ОбластьМакетаШапкаДокумента);
		
		ОбластьМакетаШапка.Параметры.НомерВедомости = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаШапок.Номер);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		
		ВыведеноСтраниц = 1; ВыведеноСтрок = 0; ИтогоНаСтранице = 0; Итого = 0;
		// выводим данные по строкам документа.
		Пока ВыборкаСтрок.НайтиСледующий(ВыборкаШапок.Ссылка, "Ведомость") Цикл
		
			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
			ОбластьМакетаСтрока.Параметры.ФизическоеЛицо = ВыборкаСтрок.Фамилия +" "+ ВыборкаСтрок.Имя +" "+ ВыборкаСтрок.Отчество;
			ОбластьМакетаСтрока.Параметры.КодПоДРФО = ?(СокрЛП(ВыборкаСтрок.КодПоДРФО)="",""," (" +  ВыборкаСтрок.КодПоДРФО + ")");

			// разбиение на страницы
			ВыведеноСтрок = ВыведеноСтрок + 1;
			ОбластьМакетаСтрока.Параметры.НомерСтроки = ВыведеноСтрок;
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);

			Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
				ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
				ВывестиПодвалЛиста = Не ТабличныйДокумент.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;
			Если ВывестиПодвалЛиста Тогда
				
				ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
				ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыведеноСтраниц = ВыведеноСтраниц + 1;
				ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
				ИтогоНаСтранице = 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			ИтогоНаСтранице = ИтогоНаСтранице + ВыборкаСтрок.Сумма;
			Итого = Итого + ВыборкаСтрок.Сумма;
			
		КонецЦикла;
		ОбластьМакетаИтогПоСтранице.Параметры.ИтогоНаСтранице = ИтогоНаСтранице;
		ТабличныйДокумент.Вывести(ОбластьМакетаИтогПоСтранице);
		Если Вариант2018 Тогда
			ТабличныйДокумент.Область("R23C4").Текст  = ВыведеноСтраниц + 1;
		Иначе	
			ТабличныйДокумент.Область("R23C10").Текст  = ВыведеноСтраниц + 1;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);

	КонецЦикла; // по документам
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Формирует запрос по документу
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу
//
// Возвращаемое значение:
//  Результат запроса
//
Функция ВыборкаДляПечатиШапки(Ведомости)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Сумма КАК СуммаЗадепонировано
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
	|ГДЕ
	|	ВзаиморасчетыСДепонентами.Ведомость В(&Ведомости)
	|	И ВзаиморасчетыСДепонентами.ВидДвижения = &Приход";
	
	ТаблицаЗадепонировано = Запрос.Выполнить().Выгрузить();
	Если ТаблицаЗадепонировано.Количество() = 0 Тогда
		СуммаЗадепонировано = 0 
	Иначе
		СуммаЗадепонировано = ТаблицаЗадепонировано.Итог("СуммаЗадепонировано");
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВедомостьВКассу.Ссылка КАК Ссылка,
	|	ВедомостьВКассу.Номер КАК Номер,
	|	ВедомостьВКассу.Дата КАК Дата,
	|	ВедомостьВКассу.ПериодРегистрации КАК ПериодРегистрации,
	|	ВедомостьВКассу.Организация КАК Организация,
	|	ВЫРАЗИТЬ(ВедомостьВКассу.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
	|	ВедомостьВКассу.Организация.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	ВедомостьВКассу.Подразделение.Наименование КАК Подразделение,
	|	ВедомостьВКассу.СуммаПоДокументу КАК СуммаПоДокументу,
	|	ВедомостьВКассу.Руководитель,
	|	ВедомостьВКассу.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	ВедомостьВКассу.ГлавныйБухгалтер,
	|	ВедомостьВКассу.Бухгалтер
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьВКассу
	|ГДЕ
	|	ВедомостьВКассу.Ссылка В(&Ведомости)";

	Запрос.Выполнить();
	
	ИменаПолейОтветственныхЛиц = Новый Массив;
	ИменаПолейОтветственныхЛиц.Добавить("Руководитель");
	ИменаПолейОтветственныхЛиц.Добавить("ГлавныйБухгалтер");
	ИменаПолейОтветственныхЛиц.Добавить("Бухгалтер");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Ложь, ИменаПолейОтветственныхЛиц, "ВТДанныеДокументов");
	
	Запрос.УстановитьПараметр("СуммаЗадепонировано", СуммаЗадепонировано);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка,
	|	ДанныеДокументов.Номер,
	|	ДанныеДокументов.Дата,
	|	ДанныеДокументов.ПериодРегистрации,
	|	ДанныеДокументов.Организация,
	|	ДанныеДокументов.НазваниеОрганизации,
	|	ДанныеДокументов.КодПоЕДРПОУ,
	|	ДанныеДокументов.Подразделение,
	|	ДанныеДокументов.СуммаПоДокументу,
	|	ЕСТЬNULL(ВТФИОГлавБухПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОГлавБухПоследние.Отчество, """") КАК ГлавныйБухгалтер,
	|	ЕСТЬNULL(ВТФИОРуководителейПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОРуководителейПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОРуководителейПоследние.Отчество, """") КАК Руководитель,
	|	ДанныеДокументов.РуководительДолжность,
	|	ЕСТЬNULL(ВТФИОБухгалтерПоследние.Фамилия, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Имя, """") + "" "" + ЕСТЬNULL(ВТФИОБухгалтерПоследние.Отчество, """") КАК Бухгалтер,
	|	ДанныеДокументов.РуководительДолжность КАК РуководительДолжность,
	|	&СуммаЗадепонировано КАК СуммаЗадепонировано
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОРуководителейПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОРуководителейПоследние.Ссылка
	|			И ДанныеДокументов.Руководитель = ВТФИОРуководителейПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОГлавБухПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОГлавБухПоследние.Ссылка
	|			И ДанныеДокументов.ГлавныйБухгалтер = ВТФИОГлавБухПоследние.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ВТФИОБухгалтерПоследние
	|		ПО ДанныеДокументов.Ссылка = ВТФИОБухгалтерПоследние.Ссылка
	|			И ДанныеДокументов.Бухгалтер = ВТФИОБухгалтерПоследние.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокументов.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокументов.Дата, ГОД),
	|	ДанныеДокументов.Номер";
	
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

// Формирует запрос по табличной части документа
//
// Параметры: 
//  Ведомости - массив ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу
//
// Возвращаемое значение:
//  Выборка из результата запроса
//
Функция ВыборкаДляПечатиТаблицы(Ведомости)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ведомости", Ведомости);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСДепонентами.Сумма КАК СуммаЗадепонировано,
	|	ВзаиморасчетыСДепонентами.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДанныеЗадепонировано
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСДепонентами КАК ВзаиморасчетыСДепонентами
	|ГДЕ
	|	ВзаиморасчетыСДепонентами.Ведомость В(&Ведомости)
	|	И ВзаиморасчетыСДепонентами.ВидДвижения = &Приход";
	Запрос.Выполнить();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВедомостьВКассуЗарплата.Ссылка КАК Ссылка,
	|	ВедомостьВКассуЗарплата.Ссылка.Дата КАК Период,
	|	ВедомостьВКассуЗарплата.НомерСтроки КАК НомерСтроки,
	|	ВедомостьВКассуЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВедомостьВКассуЗарплата.КВыплате КАК КВыплате
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.Зарплата КАК ВедомостьВКассуЗарплата
	|ГДЕ
	|	ВедомостьВКассуЗарплата.Ссылка В(&Ведомости);
	|ВЫБРАТЬ
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов";
	
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	Сотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(МассивФизическихЛиц, Истина, Ведомости[0].Организация, Ведомости[0].Дата);
	
	Запрос.УстановитьПараметр("ТаблицаСотрудников", Сотрудники);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТТаблицаСотрудников
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Период КАК Период,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаСотрудников КАК ТаблицаСотрудников
	|		ПО ДанныеДокументов.ФизическоеЛицо = ТаблицаСотрудников.ФизическоеЛицо";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = 
		КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
    		Запрос.МенеджерВременныхТаблиц,
    		"ВТДанные");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Фамилия, Имя, Отчество");

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ведомость,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	КадровыеДанныеСотрудников.Фамилия,
	|	КадровыеДанныеСотрудников.Имя,
	|	КадровыеДанныеСотрудников.Отчество,
	|	ДанныеДокументов.КВыплате КАК Сумма,
	|	КадровыеДанныеСотрудников.Сотрудник.Код КАК ТабельныйНомер,
	|	ДанныеДокументов.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
	|   ВЫБОР КОГДА ЕСТЬNULL(ДанныеЗадепонировано.СуммаЗадепонировано,0) <> 0 
	|		ТОГДА
	|			""Задепоновано""
	|		ИНАЧЕ
	|			""""
	|	КОНЕЦ КАК ЗаписьОДепонировании,	
	|	ДанныеЗадепонировано.СуммаЗадепонировано КАК СуммаЗадепонировано
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|			ПО ДанныеДокументов.ФизическоеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
	|       ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеЗадепонировано КАК ДанныеЗадепонировано
	|       	ПО ДанныеДокументов.ФизическоеЛицо = ДанныеЗадепонировано.ФизическоеЛицо
	|ГДЕ
	|	ДанныеДокументов.КВыплате > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

//////////////////////////////////////////////////////////////////


#КонецЕсли