#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
Перем мВалютаРегламентированногоУчета;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
		
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	// Заполняем счета учета взаиморасчетов
	ТаблицаСчетов = УчетВзаиморасчетов.ПолучитьТаблицуСчетовУчетаВзаиморасчетов(Истина,Ложь);
	ТаблицаСчетов.Колонки.СчетРасчетов.Имя = "Счет";
	ТаблицаСчетов.Колонки.Добавить("УчаствуетВРасчетах", Новый ОписаниеТипов("Булево"));
	ТаблицаСчетов.ЗаполнитьЗначения(Истина, "УчаствуетВРасчетах");
	СписокСчетов.Загрузить(ТаблицаСчетов);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначенияБП.ПолучитьРабочуюДату());
	Ответственный = Пользователи.ТекущийПользователь();

	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
	ВалютаДокумента, Дата);
	
	КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) 
		И ДатаНачала > ДатаОкончания Тогда
	
		ТекстСообщения = ОбщегоНазначенияБПКлиентСервер.ПолучитьТекстСообщения("Поле", "Корректность",
			НСтр("ru='Период по';uk='Період до'"), , , 
			НСтр("ru='Дата окончания периода сверки должна быть больше даты начала.';uk='Дата закінчення періоду звірки повинна бути більше дати початку.'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ДатаОкончания", "Объект", Отказ);
		
	КонецЕсли;
	
КонецПроцедуры


// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Заполнение таблицы "По данным организации" по информации из бухгалтерского учета
Процедура ЗаполнитьПоДаннымБухгалтерскогоУчета() Экспорт
	
	Если ДатаОкончания < ДатаНачала Тогда
		ТекстОшибки = НСтр("ru='Неверно задан период сверки расчетов.';uk='Невірно заданий період звірки розрахунків.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , , "Объект.ДатаОкончания");
		Возврат;
	КонецЕсли;
	
	КоличествоСчетов = СписокСчетов.Количество();
	ФильтрСписокСчетов = Новый СписокЗначений();
	Для каждого СтрокаСчета Из СписокСчетов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.Счет);
		КонецЕсли; 
	КонецЦикла; 
	
	Если ФильтрСписокСчетов.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru='Неверно задан список счетов,по которым производится сверка .';uk='Невірно заданий список рахунків,по яких виконується звірка .'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , , "Объект.СписокСчетов");
		//Предупреждение(НСтр("ru='Неверно задан список счетов,по которым производится сверка .';uk='Невірно заданий список рахунків,по яких виконується звірка .'"), "!");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ?(НЕ ЗначениеЗаполнено(ДатаОкончания),ДатаОкончания,КонецДня(ДатаОкончания)));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("Валюта",        ?(НЕ ЗначениеЗаполнено(ВалютаДокумента) или (ВалютаДокумента = мВалютаРегламентированногоУчета), неопределено,ВалютаДокумента));
	Запрос.УстановитьПараметр("ФильтрСписокСчетов", ФильтрСписокСчетов);
	
	АналитикаРасчетов = новый Массив();
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("АналитикаРасчетов",    АналитикаРасчетов);
	
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ?(НЕ ЗначениеЗаполнено(ДоговорКонтрагента),Неопределено,ДоговорКонтрагента));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Регистратор.Дата КАК Дата,
	|	ХозрасчетныйОбороты.Регистратор.Номер КАК Номер,
	|	ХозрасчетныйОбороты.Регистратор КАК Документ,
	|	ХозрасчетныйОбороты.Субконто2 КАК Договор,
	|	0 КАК ОстатокНаНачало,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотДт
	|	КОНЕЦ КАК Дебет,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|		ИНАЧЕ ХозрасчетныйОбороты.ВалютнаяСуммаОборотКт
	|	КОНЕЦ КАК Кредит,
	|	0 КАК ОстатокНаКонец,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.ДатаВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Регистратор.НомерОрдера, НЕОПРЕДЕЛЕНО) КАК НомерДокумента,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ХозрасчетныйОбороты.КорСубконто2,
	|	ХозрасчетныйОбороты.КорСубконто3,
	|	ХозрасчетныйОбороты.Валюта,
	|	ХозрасчетныйОбороты.ВалютнаяСуммаОборот,
	|	ХозрасчетныйОбороты.Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|		&ДатаНачала,
	|		&ДатаОкончания,
	|		Регистратор,
	|		Счет В ИЕРАРХИИ (&ФильтрСписокСчетов),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|			И ВЫБОР
	|				КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Валюта = &Валюта
	|			КОНЕЦ
	|			И Субконто1 = &Контрагент
	|			И ВЫБОР
	|				КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Субконто2 = &ДоговорКонтрагента
	|			КОНЕЦ,
	|		,
	|		) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В ИЕРАРХИИ (&ФильтрСписокСчетов)
	|				ТОГДА ВЫБОР
	|						КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|							ТОГДА (НЕ ХозрасчетныйОбороты.КорСубконто1 = &Контрагент)
	|						ИНАЧЕ (НЕ(ХозрасчетныйОбороты.КорСубконто1 = &Контрагент
	|									И ХозрасчетныйОбороты.КорСубконто2 = &ДоговорКонтрагента))
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Остатки"",
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстатки.СуммаНачальныйОстаток
	|		ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаНачальныйОстаток
	|	КОНЕЦ,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|			ТОГДА ХозрасчетныйОстатки.СуммаКонечныйОстаток
	|		ИНАЧЕ ХозрасчетныйОстатки.ВалютнаяСуммаКонечныйОстаток
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|		&ДатаНачала,
	|		&ДатаОкончания,
	|		Период,
	|		ДвиженияИГраницыПериода,
	|		Счет В ИЕРАРХИИ (&ФильтрСписокСчетов),
	|		&АналитикаРасчетов,
	|		Организация = &Организация
	|		    И ВЫБОР
	|		        КОГДА &Валюта = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Валюта = &Валюта
	|		    КОНЕЦ
	|		    И Субконто1 = &Контрагент
	|		    И ВЫБОР
	|		        КОГДА &ДоговорКонтрагента = НЕОПРЕДЕЛЕНО
	|		            ТОГДА ИСТИНА
	|		        ИНАЧЕ Субконто2 = &ДоговорКонтрагента
	|		    КОНЕЦ) КАК ХозрасчетныйОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Документ,
	|   Дебет";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// заполнять документ будем "как для печати"
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	
	НаборДвижений = ПоДаннымОрганизации.Выгрузить();
	НаборДвижений.Колонки.Добавить("Валюта", Новый описаниеТипов("СправочникСсылка.Валюты"));
	НаборДвижений.Колонки.Добавить("ВалютнаяСумма", ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15,2));
	
	ОстатокНаНачало = 0;
	ОстатокНаКонец  = 0;
	ТекДокумент = "Неопределено";
	ТекДоговор =  "Неопределено";
	НоваяСтрока = Неопределено;
	Пока Выборка.Следующий() Цикл

		Если Выборка.Дата = "Остатки" Тогда
			ОстатокНаНачало = ОстатокНаНачало+Выборка.ОстатокНаНачало;
			ОстатокНаКонец  = ОстатокНаКонец+Выборка.ОстатокНаКонец;
			Продолжить;
		КонецЕсли; 
		
		Если Выборка.Дебет = 0 И Выборка.Кредит = 0 Тогда
			Продолжить;
		КонецЕсли;

		Если Выборка.КорСубконто1 = Контрагент 
		   И Выборка.КорСубконто2 = Выборка.Договор
		   И НЕ ФильтрСписокСчетов.НайтиПоЗначению(Выборка.КорСчет) = Неопределено Тогда
		
			// зачет аванса или подобное
			Продолжить;
		
		КонецЕсли;
		
		НЕДобавлятьСтроку = ((ТекДокумент = Выборка.Документ) И (НЕ РазбитьПоДоговорам ИЛИ (ТекДоговор = Выборка.Договор)));
		
		Если НЕДобавлятьСтроку Тогда
			
			Если Выборка.Дебет <> 0 Тогда
				Если НоваяСтрока.Дебет <> 0 Тогда
					НоваяСтрока.Дебет  = НоваяСтрока.Дебет + Выборка.Дебет;
				Иначе	
				    НоваяСтрока.Кредит  = НоваяСтрока.Кредит - Выборка.Дебет;
				КонецЕсли;
			КонецЕсли;
			
			Если Выборка.Кредит <> 0 Тогда
				Если НоваяСтрока.Кредит <> 0 Тогда
					НоваяСтрока.Кредит  = НоваяСтрока.Кредит + Выборка.Кредит;
				Иначе	
				    НоваяСтрока.Дебет  = НоваяСтрока.Дебет - Выборка.Кредит;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			ТекДокумент = Выборка.Документ;
			
			НоваяСтрока = НаборДвижений.Добавить();
			НоваяСтрока.Документ           = Выборка.Документ;
			Если РазбитьПоДоговорам Тогда
				НоваяСтрока.Договор        = Выборка.Договор;
			КонецЕсли;
			НоваяСтрока.Дата               = Выборка.Дата;
			НоваяСтрока.Дебет              = Выборка.Дебет;
			НоваяСтрока.Кредит             = Выборка.Кредит;
			НоваяСтрока.Валюта             = Выборка.Валюта;
			НоваяСтрока.ВалютнаяСумма      = Выборка.ВалютнаяСуммаОборот;
		КонецЕсли;	
		
		Если ВыводитьПолныеНазванияДокументов Тогда 
			
			Если Выборка.НомерВходящегоДокумента = Неопределено тогда
				Если Выборка.НомерДокумента = Неопределено тогда
					НоваяСтрока.Представление = Локализация.ПолучитьЛокализованныйСинонимОбъекта(Выборка.Документ,
					КодЯзыкаПечать)+" №"+Символы.НПП + ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Выборка.Номер);
														   
														   
				Иначе			
					НоваяСтрока.Представление = Локализация.ПолучитьЛокализованныйСинонимОбъекта(Выборка.Документ,
		                                                   КодЯзыкаПечать) +" №"+ Выборка.НомерДокумента;
				КонецЕсли;
			Иначе
				НоваяСтрока.Представление = Локализация.ПолучитьЛокализованныйСинонимОбъекта(Выборка.Документ,
		                                                   КодЯзыкаПечать) +" ("+ ?(НЕ ЗначениеЗаполнено(Выборка.НомерВходящегоДокумента),"_______", Выборка.НомерВходящегоДокумента) +
														   НСтр("ru=' от ';uk=' від '",КодЯзыкаПечать) +
				                                           ?(НЕ ЗначениеЗаполнено(Выборка.ДатаВходящегоДокумента), "'  .  .    '", Формат(Выборка.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy"))+")";
			КонецЕсли;	
			
		Иначе  
		
			// Сформируем строку представления
			Представление = "";
			
			Если Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ПолученныеШтрафыПениНеустойки)
			 ИЛИ Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ПризнанныеШтрафыПениНеустойки) Тогда
				Представление =  НСтр("ru='Санкции';uk='Санкції'",КодЯзыкаПечать);
			КонецЕсли;

			Если не ПустаяСтрока(Представление) Тогда
				 // Строка уже отработана
			
			ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.КраткосрочныеЗаймы) 
	     		  или Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ДолгосрочныеЗаймы) Тогда
				  
			    Если (Выборка.Дебет >0) Тогда
					Представление = НСтр("ru='Займ';uk='Позика'",КодЯзыкаПечать);
				ИначеЕсли (Выборка.Кредит >0)Тогда
					Представление =  НСтр("ru='Возврат займа';uk='Повернення позики'",КодЯзыкаПечать);
				Иначе
					Представление =  НСтр("ru='Операции по займам';uk='Операції по позиках'",КодЯзыкаПечать);
				КонецЕсли;
				
			ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям) 
				  или Выборка.Счет = ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям	Тогда
				
				Представление =  НСтр("ru='Претензия';uk='Претензія'",КодЯзыкаПечать);
				
			ИначеЕсли Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Касса) 
				  или Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.СчетаВБанках)
				  ИЛИ Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами) 
				  Тогда
				
				Если (Выборка.Кредит >0) Тогда
				
					Если  Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
					  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансам) Тогда 
						Представление =  НСтр("ru='Возврат средств';uk='Повернення коштів'",КодЯзыкаПечать);
						
					ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками) 
						  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным) Тогда
						
						Представление = НСтр("ru='Оплата';uk='Оплата'",КодЯзыкаПечать);
						
					Иначе
						
						Представление =  НСтр("ru='Перевод средств';uk='Переведення  коштів'",КодЯзыкаПечать);
						
					КонецЕсли;
					
				ИначеЕсли (Выборка.Дебет >0) Тогда
					Если  Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
					  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСДругимиДебиторами)
					  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторами)
					  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоВыданнымАвансам) Тогда
						
						Представление = НСтр("ru='Оплата';uk='Оплата'",КодЯзыкаПечать);
						
					ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками)
						  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным) Тогда
						  
						Представление =  НСтр("ru='Возврат средств';uk='Повернення коштів'",КодЯзыкаПечать);
						
					Иначе
						
						Представление =  НСтр("ru='Перевод средств';uk='Переведення  коштів'",КодЯзыкаПечать);
						
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками) Тогда
				Если Выборка.Дебет <>0 Тогда
					
					Представление =  НСтр("ru='Возврат';uk='Повернення'",КодЯзыкаПечать);
						
				ИначеЕсли Выборка.Кредит <>0 Тогда
					
					Представление = НСтр("ru='Поступление';uk='Надходження'",КодЯзыкаПечать);
					
				КонецЕсли;
			ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками) Тогда
				Если Выборка.Дебет <>0 Тогда
					
					Представление = НСтр("ru='Продажа';uk='Продаж'",КодЯзыкаПечать);
						
				ИначеЕсли (Выборка.Кредит <>0) Тогда
					
					Представление =  НСтр("ru='Возврат';uk='Повернення'",КодЯзыкаПечать);
					
				КонецЕсли;
			ИначеЕсли Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСДругимиДебиторами)
				  ИЛИ Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСДругимиКредиторами) Тогда
				  
				Если Выборка.Дебет <>0 Тогда
					
					Представление =  НСтр("ru='Реализация';uk='Реалізація'",КодЯзыкаПечать);
						
				ИначеЕсли Выборка.Кредит <>0 Тогда
					
				   Если Выборка.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ВычетыИзДохода)
					 ИЛИ Выборка.КорСчет = ПланыСчетов.Хозрасчетный.ВычетыИзДохода Тогда
					    Представление =  НСтр("ru='Возврат';uk='Повернення'",КодЯзыкаПечать);
				 	Иначе
						Представление = НСтр("ru='Поступление';uk='Надходження'",КодЯзыкаПечать);
					КонецЕсли;
					
				КонецЕсли;		 
			КонецЕсли;
			
			Если ПустаяСтрока(Представление)Тогда
				Если Выборка.Дебет > 0 тогда
					Представление =  НСтр("ru='Принято';uk='Прийнято'",КодЯзыкаПечать);
				ИначеЕсли Выборка.Дебет < 0 тогда
					Представление = НСтр("ru='Сторно: принято';uk='Сторно: прийняте'",КодЯзыкаПечать);
				ИначеЕсли Выборка.Кредит > 0 тогда
					Представление = НСтр("ru='Передано';uk='Передано'",КодЯзыкаПечать);
				Иначе
					Представление = НСтр("ru='Сторно: передано';uk='Сторно: передане'",КодЯзыкаПечать);
				КонецЕсли;
			КонецЕсли;

			Если Выборка.НомерВходящегоДокумента = Неопределено тогда
				Представление = Представление +" ("+Формат(Выборка.Дата, "ДФ=dd.MM.yyyy") +")";
			Иначе
				Представление = Представление +" ("+ ?(НЕ ЗначениеЗаполнено(Выборка.НомерВходящегоДокумента),"_______", Выборка.НомерВходящегоДокумента) + НСтр("ru=' от ';uk=' від '",КодЯзыкаПечать) +
				?(НЕ ЗначениеЗаполнено(Выборка.ДатаВходящегоДокумента), "'  .  .    '", Формат(Выборка.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy"))+")";
			КонецЕсли;					  
			
			НоваяСтрока.Представление = Представление;
			
		КонецЕсли;

	КонецЦикла;
	
	
	Если ВалютаДокумента = мВалютаРегламентированногоУчета И НЕ ВыводитьПолныеНазванияДокументов Тогда
		НаборДвижений.Свернуть("Дата,Документ,Представление,Договор,Валюта","Дебет, Кредит, ВалютнаяСумма");
		Для каждого СтрокаДвижений Из НаборДвижений Цикл
			Если СтрокаДвижений.ВалютнаяСумма >0 тогда
				
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
			ИначеЕсли СтрокаДвижений.ВалютнаяСумма <0 тогда
				Множитель = ?(СтрокаДвижений.Дебет + СтрокаДвижений.Кредит>0, -1,1);
				
				СтрокаДвижений.Представление = СтрокаДвижений.Представление+" ("+Формат(Множитель*СтрокаДвижений.ВалютнаяСумма, "ЧЦ=15; ЧДЦ=2")+" "+строка(СтрокаДвижений.Валюта) +")";
	
			КонецЕсли;
		КонецЦикла; 
		
	Иначе
		НаборДвижений.Свернуть("Дата,Документ,Представление,Договор","Дебет, Кредит");	
	КонецЕсли; 
	
	Если ВыводитьПолныеНазванияДокументов Тогда	
		НаборДвижений.Свернуть("Дата,Документ,Представление,Договор","Дебет, Кредит");
	КонецЕсли;
	
	Если РазбитьПоДоговорам Тогда		
		НаборДвижений.Сортировать("Договор, Дата,Документ,Представление");		
	Иначе	
		НаборДвижений.Сортировать("Дата,Документ,Представление,Договор");
	КонецЕсли; 	
						  
	ПоДаннымОрганизации.Загрузить(НаборДвижений);

КонецПроцедуры

Процедура ЗаполнитьПоДаннымОрганизации() Экспорт
	
	ТабЗнач = ПоДаннымОрганизации.Выгрузить();
	ТабЗнач.Колонки.Дебет.Имя  = "КредитК";
	ТабЗнач.Колонки.Кредит.Имя = "Дебет";
	ТабЗнач.Колонки.КредитК.Имя= "Кредит";
	
	Для каждого СтрокаДвижений Из ТабЗнач Цикл
		Представление = СокрЛП(СтрокаДвижений.Представление);
		Если Лев(Представление, 8) = "Передано" Тогда
			Представление = "Принято" + Сред(Представление, 9);
			
		ИначеЕсли Лев(Представление, 7) = "Принято" Тогда
			Представление = "Передано" + Сред(Представление, 8);

		ИначеЕсли Лев(Представление, 7) = "Продажа" Тогда
			Представление = "Приход" + Сред(Представление, 8);

		ИначеЕсли Лев(Представление, 6) = "Приход" Тогда
			Представление = "Продажа" + Сред(Представление, 7);
		КонецЕсли;
		СтрокаДвижений.Представление = Представление;
	КонецЦикла;
	
	ПоДаннымКонтрагента.Загрузить(ТабЗнач);
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
#КонецЕсли
