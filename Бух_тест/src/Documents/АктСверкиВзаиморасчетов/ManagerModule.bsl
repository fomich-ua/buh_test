#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс



#КонецОбласти 	

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать акта сверки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСверки";
	КомандаПечати.Представление = НСтр("ru='Акт сверки';uk='Акт звірки'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru='Реестр документов';uk='Реєстр документів'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru='Реестр документов ""Акт сверки расчетов с контрагентом""';uk='Реєстр документів ""Акт звірки розрахунків з контрагентом""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСверки") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСверки", НСтр("ru='Акт сверки взаиморасчетов';uk='Акт звірки взаєморозрахунків'"),
		ПечатьАктаСверки(МассивОбъектов, ОбъектыПечати,ПараметрыВывода), , "Документ.АктСверкиВзаиморасчетов.ПФ_MXL_АктСверки", , Истина);
	КонецЕсли;
	
//	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПечатьАктаСверки(МассивОбъектов, ОбъектыПечати,ПараметрыВывода)
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов_АктСверки";
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.АктСверкиВзаиморасчетов.ПФ_MXL_АктСверки");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	ВлЗапрос.Договор КАК Договор,
	|	ВлЗапрос.Дата КАК Дата,
	|	ВлЗапрос.Дата КАК ДатаНачала,
	|	ВлЗапрос.Документ,
	|	ВлЗапрос.Представление,
	|	ВлЗапрос.ДатаК КАК ДатаК,
	|	ВлЗапрос.ПредставлениеК,
	|	isnull(ВлЗапрос.Дебет,0) КАК СуммаДогДт,
	|	isnull(ВлЗапрос.Кредит,0) КАК СуммаДогКт,
	|	isnull(ВлЗапрос.ДебетК,0) КАК СуммаДогДтКонтр,
	|	isnull(ВлЗапрос.КредитК,0) КАК СуммаДогКтКонтр,
	|	АктСверкиВзаиморасчетов.Ссылка КАК Ссылка,
	|	ВлЗапрос.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.АктСверкиВзаиморасчетов КАК АктСверкиВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ПоДаннымОрганизации.Ссылка.РазбитьПоДоговорам
	|					ТОГДА ПоДаннымОрганизации.Договор
	|				ИНАЧЕ NULL
	|			КОНЕЦ КАК Договор,
	|			ПоДаннымОрганизации.Дата КАК Дата,
	|			NULL КАК ДатаК,
	|			ПоДаннымОрганизации.Документ КАК Документ,
	|			ПоДаннымОрганизации.Представление КАК Представление,
	|			NULL КАК ПредставлениеК,
	|			ПоДаннымОрганизации.Дебет КАК Дебет,
	|			ПоДаннымОрганизации.Кредит КАК Кредит,
	|			0 КАК ДебетК,
	|			0 КАК КредитК,
	|			ПоДаннымОрганизации.Ссылка КАК Ссылка,
	|			ПоДаннымОрганизации.НомерСтроки КАК НомерСтроки
	|		ИЗ
	|			Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК ПоДаннымОрганизации
	|		ГДЕ
	|			ПоДаннымОрганизации.Ссылка В(&МассивДокументов)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ВЫБОР
	|				КОГДА ПоДаннымКонтрагента.Ссылка.РазбитьПоДоговорам
	|					ТОГДА ПоДаннымКонтрагента.Договор
	|				ИНАЧЕ NULL
	|			КОНЕЦ,
	|			NULL,
	|			ПоДаннымКонтрагента.Дата,
	|			NULL,
	|			NULL,
	|			ПоДаннымКонтрагента.Представление,
	|			0,
	|			0,
	|			ПоДаннымКонтрагента.Дебет,
	|			ПоДаннымКонтрагента.Кредит,
	|			ПоДаннымКонтрагента.Ссылка,
	|			ПоДаннымКонтрагента.НомерСтроки
	|		ИЗ
	|			Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК ПоДаннымКонтрагента
	|		ГДЕ
	|			ПоДаннымКонтрагента.Ссылка В(&МассивДокументов)) КАК ВлЗапрос
	|		ПО (ВлЗапрос.Ссылка = АктСверкиВзаиморасчетов.Ссылка)
	|ГДЕ
	|	АктСверкиВзаиморасчетов.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Договор,
	|	НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(ДатаНачала),
	|	СУММА(СуммаДогДт),
	|	СУММА(СуммаДогКт),
	|	СУММА(СуммаДогДтКонтр),
	|	СУММА(СуммаДогКтКонтр)
	|ПО
	|	Ссылка,
	|	Договор";
	
	Результат = Запрос.Выполнить();		
	
	Шапка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Организация   		= Шапка.Ссылка.Организация;
		Контрагент    		= Шапка.Ссылка.Контрагент;
		ДатаНачала    		= Шапка.Ссылка.ДатаНачала;
		ДатаОкончания 		= Шапка.Ссылка.ДатаОкончания;
		ДоговорКонтрагента  = Шапка.Ссылка.ДоговорКонтрагента;
		ПредставительКонтрагента = Шапка.Ссылка.ПредставительКонтрагента;
		ПредставительОрганизации = Шапка.Ссылка.ПредставительОрганизации;
		ВалютаДокумента 	= Шапка.Ссылка.ВалютаДокумента;
		ОстатокНаНачало 	= Шапка.Ссылка.ОстатокНаНачало;
		РазбитьПоДоговорам 	= Шапка.Ссылка.РазбитьПоДоговорам;
		СверкаСогласована 	= Шапка.Ссылка.СверкаСогласована;
		
		Если Не ПервыйДокумент Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
		//КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(), "РежимФормированияПечатныхФорм"));
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
		ОбластьДоговор      = Макет.ПолучитьОбласть("Договор");
		ОбластьДоговорИтоги = Макет.ПолучитьОбласть("ДоговорИтоги");
		ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
		ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
		ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
		ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		
		НазваниеОрганизации = Организация.НаименованиеПолное;
		Если ПустаяСтрока(НазваниеОрганизации) Тогда
			НазваниеОрганизации = Организация;
		КонецЕсли;
		
		НаименованиеКонтрагента = Контрагент.НаименованиеПолное;
		Если ПустаяСтрока(НаименованиеКонтрагента) Тогда
			НаименованиеКонтрагента = Контрагент;
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = НаименованиеКонтрагента;
		Если ДатаНачала = '00010101' Тогда
			ДатаНачалаОтчета = Шапка.ДатаНачала;
			//Если ПоДаннымОрганизации.Количество()>0 Тогда
			//	ДатаНачалаОтчета=ПоДаннымОрганизации[0].Дата;
			//Иначе
			//	ДатаНачалаОтчета = '00010101';
			//КонецЕсли;
		Иначе
			ДатаНачалаОтчета = ДатаНачала;
		КонецЕсли;
		
		ОписаниеПериода = "";
		Если Не ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
			ОписаниеПериода = НСтр("ru='на ';uk='на '",КодЯзыкаПечать) + Формат(ДатаОкончания, "ДФ=dd.MM.yyyy");
		ИначеЕсли ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
			ОписаниеПериода = НСтр("ru='за период: ';uk='за період: '",КодЯзыкаПечать) + ПредставлениеПериода(НачалоДня(ДатаНачала), КонецДня(ДатаОкончания), "ФП = Истина; Л =" + Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));
		КонецЕсли;	
		
		ТекстЗаголовка = НСтр("ru='взаимных расчетов ';uk='взаємних розрахунків '",КодЯзыкаПечать) + ОписаниеПериода + Символы.ПС
		+ НСтр("ru='между ';uk='між '",КодЯзыкаПечать) + НазваниеОрганизации + Символы.ПС + НСтр("ru='и ';uk='і '",КодЯзыкаПечать) + НаименованиеКонтрагента;
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда 
			
			Данные = Новый Структура("ДоговорДата,ДоговорНомер,ДоговорКонтрагента,ДоговорНаименованиеДляПечати", ДоговорКонтрагента.Дата,ДоговорКонтрагента.Номер,ДоговорКонтрагента,ДоговорКонтрагента.НаименованиеДляПечати);
			СписокПараметров = "ДоговорНаименованиеДляПечати,";
			МассивСтруктурСтрок = ОбщегоНазначенияБПВызовСервера.ДополнительнаяИнформация(Данные,СписокПараметров,КодЯзыкаПечать);
			НаименованиеДоговораДляПечати = МассивСтруктурСтрок[0].ЗначениеПараметра;
			
			ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + НСтр("ru='по договору ';uk='за договором '",КодЯзыкаПечать) + СокрЛП(НаименованиеДоговораДляПечати);
			
		КонецЕсли;
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		//ОбластьЗаголовок.Параметры.Заголовок = Заголовок;
		
		ДанныеПредставителяОрганизации = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Организация, ПредставительОрганизации, ДатаОкончания);
		ФИОПредставителя = ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
		+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
		+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
		
		СтрЗаголовокТаблица = НСтр("ru='Мы, нижеподписавшиеся, ';uk='Ми, що нижче підписалися, '",КодЯзыкаПечать) + ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность) + " " + НазваниеОрганизации 
		+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + НСтр("ru=', с одной стороны, ';uk=', з одного боку, '",КодЯзыкаПечать)
		+ НСтр("ru='и ';uk='і '",КодЯзыкаПечать) + ?(НЕ ЗначениеЗаполнено(ПредставительКонтрагента.Должность),"________________",ПредставительКонтрагента.Должность) + " " + НаименованиеКонтрагента + " " 
		+ ?(НЕ ЗначениеЗаполнено(ПредставительКонтрагента),"_______________________",ПредставительКонтрагента) + НСтр("ru=', с другой стороны, ';uk=', з іншого боку, '",КодЯзыкаПечать)
		+ НСтр("ru='составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:';uk='склали даний акт звірки у тому, що стан взаємних розрахунків за даними обліку наступний:'",КодЯзыкаПечать);
		
		ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
		ОбластьЗаголовок.Параметры.ВалютаДокумента = ВалютаДокумента;
		
		ТабДок.Вывести(ОбластьЗаголовок);
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		
		ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = ?(ОстатокНаНачало > 0, ОстатокНаНачало, 0);
		ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = ?(ОстатокНаНачало < 0, -ОстатокНаНачало, 0);
		ТабДок.Вывести(ОбластьНачОстатки);
		
		ОборотыДт = Шапка.СуммаДогДт;
		ОборотыКт = Шапка.СуммаДогКт;
		ОборотыДтКонтр = Шапка.СуммаДогДтКонтр;
		ОборотыКтКонтр = Шапка.СуммаДогКтКонтр;
		
		ОбходПоДоговорам = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Договор");
		Пока ОбходПоДоговорам.Следующий() Цикл
			
			Если РазбитьПоДоговорам И ЗначениеЗаполнено(ОбходПоДоговорам.Договор) Тогда
				//Выводим заголовок с договором
				Данные = Новый Структура("ДоговорДата,ДоговорНомер,ДоговорКонтрагента,ДоговорНаименованиеДляПечати", ОбходПоДоговорам.Договор.Дата,ОбходПоДоговорам.Договор.Номер,ОбходПоДоговорам.Договор,ОбходПоДоговорам.Договор.НаименованиеДляПечати);
				СписокПараметров = "ДоговорНаименованиеДляПечати,";
				МассивСтруктурСтрок = ОбщегоНазначенияБПВызовСервера.ДополнительнаяИнформация(Данные,СписокПараметров,КодЯзыкаПечать);
				НаименованиеДоговораДляПечати = МассивСтруктурСтрок[0].ЗначениеПараметра;
				ОбластьДоговор.Параметры.Договор = НаименованиеДоговораДляПечати;
				ОбластьДоговор.Параметры.Регистратор = ОбходПоДоговорам.Договор;
				ТабДок.Вывести(ОбластьДоговор);
				ОбходПоДокументам=ОбходПоДоговорам.Выбрать();
			КонецЕсли;		
			ОбходПоДокументам=ОбходПоДоговорам.Выбрать();
			
			//Создадим список документов по организации и контрагенту
			СписокДокументов = новый массив;
			СписокДокументовК = новый массив;
			Пока ОбходПоДокументам.Следующий() Цикл
				Если ОбходПоДокументам.Дата<>NULL Тогда
					СписокДокументов.Добавить(новый структура("ДатаДокумента,РегистраторПредставление,Регистратор,СуммаОборотДт,СуммаОборотКт",
					ОбходПоДокументам.Дата,ОбходПоДокументам.Представление,ОбходПоДокументам.Документ,ОбходПоДокументам.СуммаДогДт,ОбходПоДокументам.СуммаДогКт));				
				КонецЕсли;
				
				Если ОбходПоДокументам.ДатаК<>NULL Тогда
					СписокДокументовК.Добавить(новый структура("ДатаДокументаКонтр,РегистраторПредставлениеКонтр,СуммаОборотДтКонтр,СуммаОборотКтКонтр",
					ОбходПоДокументам.ДатаК,ОбходПоДокументам.ПредставлениеК,ОбходПоДокументам.СуммаДогДтКонтр,ОбходПоДокументам.СуммаДогКтКонтр));				
				КонецЕсли; 
			КонецЦикла;
			
			//Для упрощения вывода, сравним списки по количеству элементов, добавив пустые
			МаксИндекс = Макс(СписокДокументов.Количество(), СписокДокументовК.Количество())-1;
			МинИндекс = Мин(СписокДокументов.Количество(), СписокДокументовК.Количество())-1;
			Если СписокДокументов.Количество()<СписокДокументовК.Количество() Тогда
				Для инд = МинИндекс По МаксИндекс-1 Цикл
					СписокДокументов.Добавить(новый структура("ДатаДокумента,РегистраторПредставление,Регистратор,СуммаОборотДт,СуммаОборотКт","","","","",""));
				КонецЦикла;
			ИначеЕсли СписокДокументов.Количество()>СписокДокументовК.Количество() Тогда 
				Для инд = МинИндекс По МаксИндекс-1 Цикл
					СписокДокументовК.Добавить(новый структура("ДатаДокументаКонтр,РегистраторПредставлениеКонтр,СуммаОборотДтКонтр,СуммаОборотКтКонтр","","","",""));
				КонецЦикла;			
			КонецЕсли;
			
			Для Инд = 0 По МаксИндекс Цикл
				ОбластьОбороты.Параметры.Заполнить(СписокДокументов[Инд]);
				ОбластьОбороты.Параметры.Заполнить(СписокДокументовК[Инд]);			
				ТабДок.Вывести(ОбластьОбороты);
			КонецЦикла;
			
			Если РазбитьПоДоговорам Тогда
				//Выводим итоги по каждому договору
				ОбластьДоговорИтоги.Параметры.Заполнить(ОбходПоДоговорам);		
				ТабДок.Вывести(ОбластьДоговорИтоги);	
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;  
		
		ОбластьОборотыИтог.Параметры.СуммаОборотДт      = ОборотыДт;
		ОбластьОборотыИтог.Параметры.СуммаОборотКт      = ОборотыКт;
		Если СверкаСогласована тогда
			ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ОборотыДтКонтр;
			ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ОборотыКтКонтр;
		КонецЕсли;
		ТабДок.Вывести(ОбластьОборотыИтог);
		
		ОстатокНаКонец = ОстатокНаНачало + ОборотыДт -  ОборотыКт;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
		
		Если СверкаСогласована тогда
			ОстатокНаКонецК = ОстатокНаНачало - ОборотыДтКонтр +  ОборотыКтКонтр;
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
			ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = ?(ОстатокНаКонецК < 0, -ОстатокНаКонецК, 0);
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьКонОстатки);
		
		// Результаты сверки 	
		
		Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
			РезультатыСверки = НСтр("ru='<не указана дата сверки>';uk='<не вказано дату звірки>'",КодЯзыкаПечать);
		ИначеЕсли НЕ ЗначениеЗаполнено(Контрагент) Тогда
			РезультатыСверки = НСтр("ru='<не указан контрагент>';uk='<не вказано контрагент>'",КодЯзыкаПечать);
		Иначе
			
			Если ОстатокНаКонец > 0 Тогда
				РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность в пользу %2 %3 %4';uk='на %1 заборгованість на користь  %2 %3 %4'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"), СокрЛП(НазваниеОрганизации), Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2"), строка(ВалютаДокумента));
				
			ИначеЕсли ОстатокНаКонец < 0 Тогда
				РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность в пользу %2 %3 %4';uk='на %1 заборгованість на користь  %2 %3 %4'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"), СокрЛП(НаименованиеКонтрагента), Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2"), строка(ВалютаДокумента));
				
			Иначе
				РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность отсутствует.';uk='на %1 заборгованість відсутня.'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"));
				
			КонецЕсли;
		КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки; 	
		
		Если СверкаСогласована тогда
			ОбластьПодвал.Параметры.ПоДаннымКонтрагента = НСтр("ru='По данным ';uk='За даними '",КодЯзыкаПечать) + СокрЛП(НаименованиеКонтрагента);
			
			Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
				РезультатыСверки = НСтр("ru='<не указана дата сверки>';uk='<не вказано дату звірки>'",КодЯзыкаПечать);
			ИначеЕсли НЕ ЗначениеЗаполнено(Контрагент) Тогда
				РезультатыСверки = НСтр("ru='<не указан контрагент>';uk='<не вказано контрагент>'",КодЯзыкаПечать);
			Иначе
				
				Если ОстатокНаКонецК > 0 Тогда
					РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность в пользу %2 %3 %4';uk='на %1 заборгованість на користь  %2 %3 %4'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"), СокрЛП(НазваниеОрганизации), Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2"), строка(ВалютаДокумента));
					
				ИначеЕсли ОстатокНаКонецК < 0 Тогда
					РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность в пользу %2 %3 %4';uk='на %1 заборгованість на користь  %2 %3 %4'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"), СокрЛП(НаименованиеКонтрагента), Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2"), строка(ВалютаДокумента));
					
				Иначе
					РезультатыСверки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='на %1 задолженность отсутствует.';uk='на %1 заборгованість відсутня.'",КодЯзыкаПечать), Формат(ДатаОкончания, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
			
			ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
			
			Если ОстатокНаКонец-ОстатокНаКонецК<>0 Тогда
				ИтогСверки = НСтр("ru='В результате сверки выявлено расхождение информации о состоянии расчетов в размере ';uk='В результаті звірки виявлена розбіжність інформації про стан розрахунків у розмірі '",КодЯзыкаПечать)+Формат(?(ОстатокНаКонец-ОстатокНаКонецК>0,1,-1)*(ОстатокНаКонец-ОстатокНаКонецК), "ЧЦ=21; ЧДЦ=2") +" "+ Строка(ВалютаДокумента);
				ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС+ ИтогСверки+Символы.ПС+" ";
			КонецЕсли; 
		КонецЕсли;
		
		ОбластьПодвал.Параметры.НазваниеОрганизации = СокрЛП(НазваниеОрганизации);
		ОбластьПодвал.Параметры.НаименованиеКонтрагента = СокрЛП(НаименованиеКонтрагента);
		
		ОбластьПодвал.Параметры.Должность = ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность);
		ОбластьПодвал.Параметры.ДолжностьК = ?(НЕ ЗначениеЗаполнено(ПредставительКонтрагента.Должность),"________________",ПредставительКонтрагента.Должность);
		
		ОбластьПодвал.Параметры.ФИОПредставителя  = "("+?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации),"_______________________",ДанныеПредставителяОрганизации.Представление)+")";
		ОбластьПодвал.Параметры.ФИОПредставителяК = "("+?(НЕ ЗначениеЗаполнено(ПредставительКонтрагента),"_______________________",ФизическиеЛица.ФамилияИнициалыФизЛица(ПредставительКонтрагента.Фамилия + " " + ПредставительКонтрагента.Имя + " " + ПредставительКонтрагента.Отчество))+")";
		
		ТабДок.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
        		НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла; // Пока Шапка.Следующий()
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти 



#КонецЕсли