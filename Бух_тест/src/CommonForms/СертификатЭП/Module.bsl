
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СтруктураСертификата = Параметры.СтруктураСертификата;
	Отпечаток = Параметры.Отпечаток;
	
	Если Параметры.Свойство("АдресСертификата") Тогда
		АдресСертификата = Параметры.АдресСертификата;
	КонецЕсли;	
	
	КомуВыдан = СтруктураСертификата.КомуВыдан;
	КемВыдан = СтруктураСертификата.КемВыдан;
	ДействителенДо = СтруктураСертификата.ДействителенДо;
	Назначение = СтруктураСертификата.Назначение;
	
	НовоеНазначение = "";
	ДобавлятьКодНазначения = Истина;
	ЭлектроннаяПодпись.ЗаполнитьНазначениеСертификата(Назначение, НовоеНазначение, ДобавлятьКодНазначения);
	Назначение = НовоеНазначение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеНастройкиРаботыСЭП = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки();
	Если ОбщиеНастройкиРаботыСЭП.ВыполнятьПроверкуЭПНаСервере Тогда
		Сертификат = ПолучитьСертификатНаСервере();
		Если Сертификат <> Неопределено Тогда
			Сертификат = Новый СертификатКриптографии(Сертификат);
		КонецЕсли;
	Иначе
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
		Сертификат = ПолучитьСертификат(ЭтотОбъект, МенеджерКриптографии);
	КонецЕсли;
	
	Если Сертификат = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru='Сертификат не найден';uk='Сертифікат не знайдений'"));
	КонецЕсли;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru='Выберите файл для сохранения сертификата';uk='Виберіть файл для збереження сертифіката'");
	ДиалогОткрытияФайла.Фильтр    = НСтр("ru='Файлы сертификатов (*.cer)|*.cer|Все файлы (*.*)|*.*';uk='Файли сертифікатів (*.cer)|*.cer|Все файли (*.*)|*.*'");
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	Если НЕ ДиалогОткрытияФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	Сертификат.Выгрузить(ДиалогОткрытияФайла.ПолноеИмяФайла);
	
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Сертификат ЭП сохранен в файл ""%1""';uk='Сертифікат ЕП збережений у файл ""%1""'"),
		ДиалогОткрытияФайла.ПолноеИмяФайла);
	
	Состояние(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	ОбщиеНастройкиРаботыСЭП = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки();
	
	Если ОбщиеНастройкиРаботыСЭП.ВыполнятьПроверкуЭПНаСервере Тогда
		ПоказатьПредупреждение(, ПроверитьНаСервере());
	Иначе
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
		ПоказатьПредупреждение(, ПроверитьСертификат(ЭтотОбъект, МенеджерКриптографии));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверитьНаСервере()
	
	МенеджерКриптографии = ЭлектроннаяПодпись.ПолучитьМенеджерКриптографии();
	
	Возврат ПроверитьСертификат(ЭтотОбъект, МенеджерКриптографии);
	
КонецФункции

&НаСервере
Функция ПолучитьСертификатНаСервере()
	
	МенеджерКриптографии = ЭлектроннаяПодпись.ПолучитьМенеджерКриптографии();
	
	Сертификат = ПолучитьСертификат(ЭтотОбъект, МенеджерКриптографии);
	Если Сертификат = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сертификат.Выгрузить();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьСертификат(Форма, МенеджерКриптографии)
	
	Если МенеджерКриптографии = Неопределено Тогда
		Возврат НСтр("ru='Не удалось проверить сертификат, так как не определен менеджер криптографии.';uk='Не вдалося перевірити сертифікат, так як не визначений менеджер криптографії.'");
	КонецЕсли;
	
	Сертификат = ПолучитьСертификат(Форма, МенеджерКриптографии);
	
	Если Сертификат = Неопределено Тогда
		Возврат НСтр("ru='Сертификат не найден.';uk='Сертифікат не знайдено.'");
	КонецЕсли;
	
	МассивРежимовПроверки = Новый Массив;
	МассивРежимовПроверки.Добавить(РежимПроверкиСертификатаКриптографии.ИгнорироватьВремяДействия);
	МассивРежимовПроверки.Добавить(РежимПроверкиСертификатаКриптографии.РазрешитьТестовыеСертификаты);
	
	Попытка
		МенеджерКриптографии.ПроверитьСертификат(Сертификат, МассивРежимовПроверки);
	Исключение
		Возврат НСтр("ru='Сертификат недействителен.';uk='Сертифікат недійсний.'") + Символы.ПС
			+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат НСтр("ru='Сертификат действителен.';uk='Сертифікат дійсний.'");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСертификат(Форма, МенеджерКриптографии)
	
	ДвоичныеДанныеОтпечатка = Base64Значение(Форма.Отпечаток);
	
	Если ЗначениеЗаполнено(Форма.АдресСертификата) И ЭтоАдресВременногоХранилища(Форма.АдресСертификата) Тогда
		ДвоичныеДанныеСертификата = ПолучитьИзВременногоХранилища(Форма.АдресСертификата);
		Сертификат = Новый СертификатКриптографии(ДвоичныеДанныеСертификата);
	Иначе
		Если МенеджерКриптографии = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		ХранилищеСертификатов = МенеджерКриптографии.ПолучитьХранилищеСертификатов();
		Сертификат = ХранилищеСертификатов.НайтиПоОтпечатку(ДвоичныеДанныеОтпечатка);
	КонецЕсли;
	
	Возврат Сертификат;
	
КонецФункции

#КонецОбласти
