////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Предназначена для использования в ОбщегоНазначенияПереопределяемый.ЗаполнитьТаблицуПереименованияОбъектовМетаданных
//
// Заполняет переименования тех объектов метаданных, которые невозможно
// автоматически найти по типу, но ссылки на которые требуется сохранять
// в базе данных (например: подсистемы, роли).
//
// Подробнее: см. ОбщегоНазначения.ДобавитьПереименование().
//
Процедура ЗаполнитьТаблицуПереименованияОбъектовМетаданных(Итог) Экспорт
	
	
КонецПроцедуры

Процедура ПроверитьВозможностьСменыГоловнойОрганизации(Организация, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НачисленияУдержанияПоСотрудникам.Организация
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НачисленияУдержанияПоСотрудникам.Организация = &Организация";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='По %1 производилось начисление/удержание зарплаты."
"Что бы изменить головную организацию, необходимо отменить проведение этих документов.';uk='За %1 виконувалося нарахування/утримання зарплати."
"Що б змінити головну організацію, необхідно скасувати проведення цих документів.'"),
			Организация);
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Организация,
			"ГоловнаяОрганизация",
			"Объект",
			Отказ);
		
	КонецЕсли; 
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	КадроваяИсторияСотрудников.ГоловнаяОрганизация
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
			|ГДЕ
			|	КадроваяИсторияСотрудников.Организация = &Организация
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	КадроваяИсторияСотрудников.ГоловнаяОрганизация
			|ИЗ
			|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
			|ГДЕ
			|	КадроваяИсторияСотрудников.ГоловнаяОрганизация = &Организация";
			
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В %1 произведен прием на работу сотрудников."
"Что бы изменить головную организацию, необходимо отменить проведение этих документов.';uk='У %1 проведений прийом на роботу співробітників."
"Щоб змінити головну організацію, необхідно скасувати проведення цих документів.'"),
				Организация);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Организация,
				"ГоловнаяОрганизация",
				"Объект",
				Отказ);
			
		КонецЕсли; 
			
	КонецЕсли; 	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Блок функций получения значений по умолчанию

Процедура ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения) Экспорт
	
	Если ЗаполняемыеЗначения.Свойство("Год") Тогда
		ЗаполняемыеЗначения.Год = Год(ТекущаяДатаСеанса());
	КонецЕсли;
	Если ЗаполняемыеЗначения.Свойство("Месяц") Тогда
		ЗаполняемыеЗначения.Месяц = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	Если ЗаполняемыеЗначения.Свойство("ПредыдущийГод") Тогда
		ЗаполняемыеЗначения.ПредыдущийГод = Год(ТекущаяДатаСеанса()) - 1;
	КонецЕсли;
	Если ЗаполняемыеЗначения.Свойство("ПредыдущийМесяц") Тогда
		ЗаполняемыеЗначения.ПредыдущийМесяц = НачалоМесяца(НачалоМесяца(ТекущаяДатаСеанса()) - 1);
	КонецЕсли;
	Если ЗаполняемыеЗначения.Свойство("ПредыдущийКвартал") Тогда
		ЗаполняемыеЗначения.ПредыдущийКвартал = НачалоКвартала(НачалоКвартала(ТекущаяДатаСеанса()) - 1);
	КонецЕсли;
	Если ЗаполняемыеЗначения.Свойство("Ответственный") Тогда
		ЗаполняемыеЗначения.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

// Массив поддерживаемых идентификаторов значений по умолчанию
Функция СписокДоступныхЗначенийПоУмолчанию() Экспорт
	ПоддерживаемыеИдентификаторы = Новый Массив();
	ПоддерживаемыеИдентификаторы.Добавить("Год");
	ПоддерживаемыеИдентификаторы.Добавить("Месяц");
	ПоддерживаемыеИдентификаторы.Добавить("ПредыдущийГод");
	ПоддерживаемыеИдентификаторы.Добавить("ПредыдущийМесяц");
	ПоддерживаемыеИдентификаторы.Добавить("ПредыдущийКвартал");
	ПоддерживаемыеИдентификаторы.Добавить("Ответственный");
	ПоддерживаемыеИдентификаторы.Добавить("Организация");
	ПоддерживаемыеИдентификаторы.Добавить("Руководитель");
	ПоддерживаемыеИдентификаторы.Добавить("ДолжностьРуководителя");
	ПоддерживаемыеИдентификаторы.Добавить("ГлавныйБухгалтер");
	ПоддерживаемыеИдентификаторы.Добавить("Кассир");
	ПоддерживаемыеИдентификаторы.Добавить("ДолжностьКассира");
	ПоддерживаемыеИдентификаторы.Добавить("Подразделение");
	Возврат ПоддерживаемыеИдентификаторы;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Даты запрета изменения данных

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ВводСведенийОбИндексированномДоходе"                             , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ВедомостьНаВыплатуЗарплаты"                                      , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ВедомостьНаВыплатуЗарплатыВБанк"                                 , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ВедомостьНаВыплатуЗарплатыВКассу"                                , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ДепонированиеЗарплаты"				                            , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ЗаявлениеНаПрименениеЛьготы"                                     , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КадровыйПеревод"                                                 , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ИзменениеПараметровРасчетаИндексацииПоДолжностям"                , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ИзменениеПараметровРасчетаИндексации"                			, "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.КомандировкиОрганизаций"                                         , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.НачислениеЗарплаты"                                              , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПриемНаРаботу"                                                  	, "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СписаниеДепонентовВДоходыОрганизаций"                            , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.СправкаОДоходах"                                                 , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.Увольнение"                                                  	, "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ОтражениеЗарплатыВБухучете"                                     	, "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ОтражениеЗарплатыВУчете"                                     	, "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьВводНачальныхОстатковПоЗарплате"                          , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьВводСведенийОПлановыхНачисленияхРаботниковОрганизаций"    , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьКадровоеПеремещениеОрганизаций"                           , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьНачислениеКоммунальногоНалога"                            , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьОтражениеЗарплатыВРеглУчете"                              , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьПодтверждениеУплатыНалоговПоЗарплате"                     , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьПриемНаРаботуВОрганизацию"                                , "Дата" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.УдалитьУвольнениеИзОрганизаций"                                  , "Дата" , "БухгалтерскийУчет", "Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ВзаиморасчетыПоВзносамВФонды"                           , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ВзаиморасчетыПоНДФЛ"                                    , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ВзаиморасчетыСДепонентами"                              , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.НачисленияУдержанияПоСотрудникам"                       , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ВзаиморасчетыССотрудниками"                             , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ВзаиморасчетыПоУдержаниям"                              , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.ЕСВПоСотрудникам"                                       , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрНакопления.НДФЛПоСотрудникам"                                      , "Период" , "БухгалтерскийУчет", "Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.БухучетЗарплатыОрганизаций"								, "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.БухучетЗарплатыПодразделений"								, "Период" , "БухгалтерскийУчет", "Подразделение.Владелец");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.БухучетЗарплатыСотрудников"								, "Период" , "БухгалтерскийУчет", "Сотрудник.ГоловнаяОрганизация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ЕСВСотрудников"                                           , "Период" , "БухгалтерскийУчет", ""); 
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ИндексированныйДоходСовместителей"                        , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.КадроваяИсторияСотрудников"                               , "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.КоэффициентРезерваОтпусков"                        		, "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам"              , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ЛьготыПоНДФЛСотрудников"                              	, "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ОтражениеВзносовВРеглУчете"                              	, "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыКатегорийЕСВ"                              		, "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьПараметрыВыплатыЗПРаботников"                      , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПараметрыРасчетаИндексации"                               , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПлановыеНачисления"                                       , "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.ПлановыеУдержания"                                        , "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СтатьиЗатратПоВзносамФОТ"                                 , "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьВзносыВФондыРаботниковОрганизаций"                 , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьВидыРасчетовВзносовВФонды"                 		, "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьПаспортныеДанныеФизЛиц"                 			, "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьСведенияОВыплатахРаботникамОрганизацийПоПлатежнымВедомостям", "Период" , "БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьПараметрыРасчетаИндексации"                        , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьПлановыеНачисленияРаботниковОрганизаций"           , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьПлановыеУдержанияРаботниковОрганизаций"            , "Период" , "БухгалтерскийУчет", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.УдалитьРаботникиОрганизаций"                              , "Период" , "БухгалтерскийУчет", "Организация"); 
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СведенияОбИнвалидностиФизическихЛиц"						, "Период" ,"БухгалтерскийУчет", "");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СведенияОПенсионерах"										, "Период" ,"БухгалтерскийУчет", "");
    ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "РегистрСведений.СведенияОЛицахСДополнительнымиГарантиями"					, "Период" ,"БухгалтерскийУчет", "");
	
	
	// Раздел ОбъектыБазовойРеализации
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("ЗарплатаКадрыПодсистемы.ОбъектыБазовойРеализации") Тогда
		МодульОбъектыБазовойРеализации = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ЗарплатаКадрыОбъектыБазовойРеализации");
		МодульОбъектыБазовойРеализации.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Префиксация справочников по Организации

Процедура ПолучитьПрефиксообразующиеРеквизиты(Объекты) Экспорт
	
	СтрокаТаблицы = Объекты.Добавить();
	СтрокаТаблицы.Объект = Метаданные.Справочники.Сотрудники;
	СтрокаТаблицы.Реквизит = "ГоловнаяОрганизация";
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// Выгрузка/загрузка данных

// Заполняет массив типов неразделенных данных. Он используется при обновлении ссылок 
// при загрузке-выгрузке конфигурации
// 
// Параметры:
//  МассивТипов - массив
//
Процедура ТипыОбщихДанных(Знач МассивТипов) Экспорт
	
	
КонецПроцедуры

// Заполняет массив типов неразделенных данных, 
// для которых при выгрузке/загрузке используется сопоставление не по коду, 
// а по реквизиту ИдентификаторОбъекта
// 
// Параметры:
//  МассивТипов - массив
//
Процедура ТипыОбщихДанныхСопоставляемыхПоИдентификаторуОбъекта(Знач МассивТипов) Экспорт
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Регламентированная отчетность

// Процедура заполняет список используемых регламентированных отчетов
//
Процедура ЗаполнитьСписокРегламентированныхОтчетов(СписокРегламентированныхОтчетов) Экспорт
	
	
КонецПроцедуры

// Процедура заполняет структуру показателей.
// Ключ структуры – идентификатор показателя.
// Значение структуры – массив из двух элементов:
// 	- признак автозаполнения показателя,
//	- признак расшифровки показателя.
//
// Параметры:
// 	ПоказателиОтчета - структура показателей отчета,
// 	ИДОтчета         - идентификатор отчета,
//	ИДРедакцииОтчета - идентификатор редакции формы отчета.
//
Процедура ЗаполнитьПоказателиРегламентированногоОтчета(ПоказателиОтчета, ИДОтчета, ИДРедакцииОтчета) Экспорт
	
	
КонецПроцедуры

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
Процедура ЗаполнитьРегламентированныйОтчет(ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета, Контейнер) Экспорт
	
	
КонецПроцедуры
