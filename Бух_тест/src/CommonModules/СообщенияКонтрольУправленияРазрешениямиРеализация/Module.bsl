////////////////////////////////////////////////////////////////////////////////
// ОБЩАЯ РЕАЛИЗАЦИЯ ОБРАБОТКИ СООБЩЕНИЙ УДАЛЕННОГО АДМИНИСТРИРОВАНИЯ
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// {http://www.1c.ru/1cFresh/Application/Permissions/Control/a.b.c.d}InfoBasePermissionsRequestProcessed
//
// Параметры:
//  ИдентификаторЗапроса - УникальныйИдентификатор - идентификатор запроса на использование внешних ресурсов.
//  РезультатОбработки - ПеречислениеСсылка.РезультатыОбработкиЗапросовНаИспользованиеВнешнихРесурсовВМоделиСервиса,
//  ИнформацияОбОшибке - ОбъектXDTO {http://www.1c.ru/SaaS/ServiceCommon}ErrorDescription.
//
Процедура ОбработанЗапросНеразделенногоСеанса(Знач ИдентификаторЗапроса, Знач РезультатОбработки, Знач ИнформацияОбОшибке) Экспорт
	
	Менеджер = РегистрыСведений.РезультатыОбработкиРазрешенийНаИспользованиеВнешнихРесурсов.СоздатьМенеджерЗаписи();
	
	Менеджер.ИдентификаторЗапроса = ИдентификаторЗапроса;
	Менеджер.РезультатОбработки = РезультатОбработки;
	Менеджер.ИнформацияОбОшибке = ИнформацияОбОшибке.BriefErrorDescription;
	
	Менеджер.Записать();
	
	Если РезультатОбработки = Перечисления.РезультатыОбработкиЗапросовНаИспользованиеВнешнихРесурсовВМоделиСервиса.ЗапросОдобрен Тогда
		
		РаботаВБезопасномРежимеСлужебный.ПослеОбработкиЗапросов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторЗапроса));
		
	КонецЕсли;
	
КонецПроцедуры

// {http://www.1c.ru/1cFresh/Application/Permissions/Control/a.b.c.d}ApplicationPermissionsRequestProcessed
//
// Параметры:
//  ИдентификаторЗапроса - УникальныйИдентификатор - идентификатор запроса на использование внешних ресурсов.
//  РезультатОбработки - ПеречислениеСсылка.РезультатыОбработкиЗапросовНаИспользованиеВнешнихРесурсовВМоделиСервиса,
//  ИнформацияОбОшибке - ОбъектXDTO {http://www.1c.ru/SaaS/ServiceCommon}ErrorDescription.
//
Процедура ОбработанЗапросРазделенногоСеанса(Знач ИдентификаторЗапроса, Знач РезультатОбработки, Знач ИнформацияОбОшибке) Экспорт
	
	Менеджер = РегистрыСведений.РезультатыОбработкиРазрешенийНаИспользованиеВнешнихРесурсовОбластейДанных.СоздатьМенеджерЗаписи();
	
	Менеджер.ИдентификаторЗапроса = ИдентификаторЗапроса;
	Менеджер.РезультатОбработки = РезультатОбработки;
	Менеджер.ИнформацияОбОшибке = ИнформацияОбОшибке.BriefErrorDescription;
	
	Менеджер.Записать();
	
	Если РезультатОбработки = Перечисления.РезультатыОбработкиЗапросовНаИспользованиеВнешнихРесурсовВМоделиСервиса.ЗапросОдобрен Тогда
		
		РаботаВБезопасномРежимеСлужебный.ПослеОбработкиЗапросов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторЗапроса));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

