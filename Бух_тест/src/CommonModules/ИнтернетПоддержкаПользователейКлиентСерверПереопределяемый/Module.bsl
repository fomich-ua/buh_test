
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Интернет-поддержка пользователей".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с электронным документооборотом

// Процедура расшифрования маркера идентификации владельца сертификата,
// с использованием выбранного сертификата.
//
// Параметры
// ДанныеДляРасшифрования - Структура - со свойствами:
//	* НастройкиКриптографии - Структура - настройки криптографии, заполненные
//			процедурой ПолучитьНастройкиКриптографии
//			модуля ИнтернетПоддержкаПользователейСерверПереопределяемый;
//	* КонтрольныйМаркер - ДвоичныеДанные - контрольный маркер в
//				зашифрованном виде (данные для расшифрования);
//	* СертификатЭЦП - ЛюбаяСсылка - ссылка на объект данных, содержащих
//				сведения о сертификате;
//	* ДвоичныеДанныеСертификата - ДвоичныеДанные - двоичные данные
//				сертификата, открытым ключом которого был зашифрован контрольный
//				макер;
//	* ПарольДоступаЭЦП - Строка, Неопределено - сохраненный в
//				информационной базе пароль сертификата;
// РасшифрованныйМаркер - Неопределено, Число, ДвоичныеДанные - расшифрованный
//		двоичный маркер (ДвоичныеДанные) или Код ошибки (Число 1 или 2):
//		1 - неверные настройки криптопровайдера;
//		2 - ошибка при расшифровании (возможно, неверный пароль сертификата).
//			На вход подается значение Неопределено;
// ПолноеОписаниеОшибки - Строка - выходной параметр: в случае возникновения
//		ошибки должен содержать развернутое описание ошибки для журнала
//		регистрации.
//
// Пример:
// ****************************************************************************
//
// Пример (если в процедуре ПолучитьНастройкиКриптографии модуля
// ИнтернетПоддержкаПользователейСерверПереопределяемый
// также используется фрагмент кода из примера в комментарии):
//
// ****************************************************************************
//
// При использовании библиотеки стандартных подсистем ред. 2.2
//
//	// Инициализация менеджера криптографии
//	НастройкиКриптографии = ДанныеДляРасшифрования.НастройкиКриптографии;
//	
//	ПровайдерЭЦП           = НастройкиКриптографии.ПровайдерЭП;
//	#Если Клиент Тогда
//	ПутьМодуляКриптографии = НастройкиКриптографии.ПутьМодуляКриптографии;
//	#Иначе
//	ПутьМодуляКриптографии = НастройкиКриптографии.ПутьМодуляКриптографииСервера;
//	#КонецЕсли
//	ТипПровайдераЭЦП       = НастройкиКриптографии.ТипПровайдераЭП;
//	
//	Попытка
//		МенеджерКриптографии = Новый МенеджерКриптографии(ПровайдерЭЦП, ПутьМодуляКриптографии, ТипПровайдераЭЦП);
//		МенеджерКриптографии.АлгоритмПодписи     = НастройкиКриптографии.АлгоритмПодписи;
//		МенеджерКриптографии.АлгоритмХеширования = НастройкиКриптографии.АлгоритмХеширования;
//		МенеджерКриптографии.АлгоритмШифрования  = НастройкиКриптографии.АлгоритмШифрования;
//	Исключение
//		
//		// Менеджер криптографии генерирует ошибку при создании, если заданы неправильно настройки, либо
//		// отсутствует ПО криптопровайдера
//		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
//			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		РасшифрованныеДвоичныеДанные = 1;
//		Возврат;
//		
//	КонецПопытки;
//	
//	МенеджерКриптографии.ПарольДоступаКЗакрытомуКлючу = ДанныеДляРасшифрования.ПарольДоступаЭЦП;
//	
//	// Расшифрование
//	Попытка
//		РасшифрованныеДвоичныеДанные = МенеджерКриптографии.Расшифровать(ДанныеДляРасшифрования.КонтрольныйМаркер);
//	Исключение
//		
//		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
//			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		РасшифрованныеДвоичныеДанные =  2;
//		
//	КонецПопытки;
//
//
// ****************************************************************************
// При использовании библиотеки стандартных подсистем ред. 2.1
//
//// Инициализация менеджера криптографии
//	НастройкиКриптографии = ДанныеДляРасшифрования.НастройкиКриптографии;
//
//	ПровайдерЭЦП           = НастройкиКриптографии.ПровайдерЭЦП;
//	ПутьМодуляКриптографии = НастройкиКриптографии.ПутьМодуляКриптографии;
//	ТипПровайдераЭЦП       = НастройкиКриптографии.ТипПровайдераЭЦП;
//
//	Попытка
//		МенеджерКриптографии = Новый МенеджерКриптографии(ПровайдерЭЦП, ПутьМодуляКриптографии, ТипПровайдераЭЦП);
//		МенеджерКриптографии.АлгоритмПодписи     = НастройкиКриптографии.АлгоритмПодписи;
//		МенеджерКриптографии.АлгоритмХеширования = НастройкиКриптографии.АлгоритмХеширования;
//		МенеджерКриптографии.АлгоритмШифрования  = НастройкиКриптографии.АлгоритмШифрования;
//	Исключение
//		
//		// Менеджер криптографии генерирует ошибку при создании, если заданы неправильно настройки, либо
//		// отсутствует ПО криптопровайдера
//		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
//			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		РасшифрованныеДвоичныеДанные = 1;
//		Возврат;
//		
//	КонецПопытки;
//
//	МенеджерКриптографии.ПарольДоступаКЗакрытомуКлючу = ДанныеДляРасшифрования.ПарольДоступаЭЦП;
//
//// Расшифровка
//	Попытка
//		РасшифрованныеДвоичныеДанные = МенеджерКриптографии.Расшифровать(ДанныеДляРасшифрования.КонтрольныйМаркер);
//	Исключение
//		
//		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
//			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		РасшифрованныеДвоичныеДанные =  2;
//		
//	КонецПопытки;
//
Процедура РасшифроватьМаркерИдентификацииВладельцаСертификата(
	ДанныеДляРасшифрования,
	РасшифрованныеДвоичныеДанные,
	ПолноеОписаниеОшибки = "") Экспорт
	
	// Инициализация менеджера криптографии
	НастройкиКриптографии = ДанныеДляРасшифрования.НастройкиКриптографии;
	
	ПровайдерЭЦП           = НастройкиКриптографии.ПровайдерЭП;
	#Если Клиент Тогда
	ПутьМодуляКриптографии = НастройкиКриптографии.ПутьМодуляКриптографии;
	#Иначе
	ПутьМодуляКриптографии = НастройкиКриптографии.ПутьМодуляКриптографииСервера;
	#КонецЕсли
	ТипПровайдераЭЦП       = НастройкиКриптографии.ТипПровайдераЭП;
	
	Попытка
		МенеджерКриптографии = Новый МенеджерКриптографии(ПровайдерЭЦП, ПутьМодуляКриптографии, ТипПровайдераЭЦП);
		МенеджерКриптографии.АлгоритмПодписи     = НастройкиКриптографии.АлгоритмПодписи;
		МенеджерКриптографии.АлгоритмХеширования = НастройкиКриптографии.АлгоритмХеширования;
		МенеджерКриптографии.АлгоритмШифрования  = НастройкиКриптографии.АлгоритмШифрования;
	Исключение
		
		// Менеджер криптографии генерирует ошибку при создании, если заданы неправильно настройки, либо
		// отсутствует ПО криптопровайдера
		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		РасшифрованныеДвоичныеДанные = 1;
		Возврат;
		
	КонецПопытки;
	
	МенеджерКриптографии.ПарольДоступаКЗакрытомуКлючу = ДанныеДляРасшифрования.ПарольДоступаЭЦП;
	
	// Расшифрование
	Попытка
		РасшифрованныеДвоичныеДанные = МенеджерКриптографии.Расшифровать(ДанныеДляРасшифрования.КонтрольныйМаркер);
	Исключение
		
		ПолноеОписаниеОшибки = НСтр("ru='Не удалось расшифровать маркер. ';uk='Не вдалося розшифрувати маркер. '")
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		РасшифрованныеДвоичныеДанные =  2;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти