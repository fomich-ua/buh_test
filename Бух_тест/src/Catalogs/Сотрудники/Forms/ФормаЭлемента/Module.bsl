&НаКлиенте
Перем ОткрытыеФормы Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СотрудникиФормы.СотрудникиПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	Если ЭтаФорма.СозданиеНового И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКадровыйУчет") Тогда
		УстановитьКатегориюЕСВПоУмолчанию(ЭтаФорма);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СотрудникиКлиент.СотрудникиПриЗакрытии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	СотрудникиКлиент.СотрудникиОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	СотрудникиФормы.СотрудникиПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Не ПараметрыЗаписи.Свойство("ПроверкаПередЗаписьюВыполнена") Тогда 
		Отказ = Истина;
		ЗаписатьНаКлиенте(Ложь);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	СотрудникиФормы.СотрудникиПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	СотрудникиФормы.СотрудникиПриЗаписиНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	СотрудникиФормы.СотрудникиПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	СотрудникиКлиент.СотрудникиПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	СотрудникиФормы.СотрудникиОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// При изменении данных физлица / сотрудника

&НаКлиенте
Процедура ДатаПриемаПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ФизлицоДРФОПриИзменении(Элемент)

	СотрудникиКлиент.СотрудникиДРФОПриИзменении(ЭтаФорма, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоДРФОНадписьНажатие(Элемент, СтандартнаяОбработка)

	СотрудникиКлиент.ПояснениеНажатие(Элемент, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ДатаУвольненияПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ТекущаяОрганизацияПриИзменении(Элемент)

	ТекущаяОрганизацияПриИзмененииНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВидЗанятостиПриИзменении(Элемент)

	СотрудникиКлиент.ПроверитьКонфликтыВидаЗанятостиССуществующимиСотрудниками(Сотрудник.Ссылка, Сотрудник.ФизическоеЛицо, ТекущаяОрганизация, ТекущийВидЗанятости, ДатаПриема);

КонецПроцедуры

&НаКлиенте
Процедура ТекущаяТарифнаяСтавкаПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВАрхивеПриИзменении(Элемент)

	СотрудникиКлиентСервер.УстановитьИнфоНадпись(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДополнитьПредставлениеПриИзменении(Элемент)

	СотрудникиКлиент.ДополнитьПредставлениеСотрудникаПриИзменении(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура УточнениеНаименованияПриИзменении(Элемент)

	СотрудникиКлиент.СформироватьНаименованиеСотрудника(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ФизлицоПолПриИзменении(Элемент)

	СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Редактирование ФИО

&НаКлиенте
Процедура СотрудникИзменилФИОНажатие(Элемент)

	СотрудникиКлиент.СотрудникИзменилФИОНажатие(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ФИОПриИзменении(Элемент)

	СотрудникиКлиент.ПриИзмененииФИОСотрудника(ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Редактирование места рождения

&НаКлиенте
Процедура ФизлицоДатаРожденияПриИзменении(Элемент)

	СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ЭтаФорма);
	СотрудникиКлиентСервер.УстановитьПодсказкуКДатеРождения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДоступаПриИзменении(Элемент)

	СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.ИнформационныйЦентр") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ИнформационныйЦентрКлиент");
		Модуль.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа с другими сотрудниками

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Сотрудник);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Подключаемый_ОткрытьФормуСотрудника(Команда)

	СотрудникиКлиент.ОткрытьФормуСотрудника(ЭтаФорма, Команда);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДругиеМестаРаботы(Команда)

	СотрудникиКлиент.ОткрытьФормуСпискаМестРаботыФизическогоЛица(ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОформитьПриемНаРаботу(Команда)

	СотрудникиКлиент.ОформитьНаОсновании(ЭтаФорма, СотрудникСсылка, "Документы.ПриемНаРаботу");

КонецПроцедуры

&НаКлиенте
Процедура ОформитьКадровыйПеревод(Команда)

	СотрудникиКлиент.ОформитьНаОсновании(ЭтаФорма, СотрудникСсылка, "Документы.КадровыйПеревод");

КонецПроцедуры

&НаКлиенте
Процедура ОформитьУвольнение(Команда)

	СотрудникиКлиент.ОформитьНаОсновании(ЭтаФорма, СотрудникСсылка, "Документы.Увольнение");

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьНаКлиенте(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Редактирование ФИО

&НаКлиенте
Процедура ФИОФизическихЛицИстория(Команда)

	СотрудникиКлиент.СотрудникиОткрытьФормуРедактированияИстории("ФИОФизическихЛиц", ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПрочитатьДанныеСвязанныеСФизлицом() Экспорт

	СотрудникиФормы.ПрочитатьДанныеСвязанныеССотрудником(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбработкаИзмененияДанныхОРабочемМестеНаСервере(ПараметрСотрудник) Экспорт

	СотрудникиФормы.ОбработкаИзмененияДанныхОРабочемМесте(ЭтаФорма, ПараметрСотрудник, "ДругиеРабочиеМеста");

КонецПроцедуры

&НаСервере
Процедура ТекущаяОрганизацияПриИзмененииНаСервере() Экспорт

	СотрудникиФормы.ПриИзмененииОрганизации(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФизическогоЛицаНаСервере() Экспорт

	СотрудникиФормы.ОбновитьДанныеФизическогоЛица(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

#Область ЗаписьЭлемента

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте(ЗакрытьПослеЗаписи, ОповещениеЗавершения = Неопределено) Экспорт 

	ПараметрыЗаписи = Новый Структура;
	СотрудникиКлиент.СотрудникиПередЗаписью(ЭтаФорма, Ложь, ПараметрыЗаписи, ОповещениеЗавершения, ЗакрытьПослеЗаписи);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВ"

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()

	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Сотрудник.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов() Экспорт

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Сотрудник"));

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

&НаКлиенте
Процедура Подключаемый_ПояснениеНажатие(Элемент, СтандартнаяОбработка = Ложь)

	СотрудникиКлиент.ПояснениеНажатие(Элемент, СтандартнаяОбработка);

КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьКатегориюЕСВПоУмолчанию(Форма)
	
	Форма.ТекущаяКатегорияЕСВ = КадровыйУчет.КатегорияЕСВПоУмолчанию(Форма.ТекущаяОрганизация);
		
КонецПроцедуры
