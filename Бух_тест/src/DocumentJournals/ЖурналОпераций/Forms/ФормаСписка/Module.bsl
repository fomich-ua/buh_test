////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ОбщегоНазначения.ПриСозданииФормыНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	
	ТипИнформации = "Контрагент";
	УстановитьОграничениеТипаОтбораИнформации(ЭтотОбъект);
	
	Если КлючНазначенияИспользования = "ДокументыПоКонтрагенту" Тогда
		
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru='Документы по контрагенту';uk='Документи по контрагенту'");
		
		// Отбор по контрагенту
		ОтборИнформацияИспользование = Истина;
		Если Параметры.Отбор.Свойство("Контрагент", ОтборИнформация) Тогда
			Элементы.ГруппаОтборИнформация.Видимость = Ложь;
			Параметры.Отбор.Удалить("Контрагент");
		КонецЕсли;
		
		// Отбор по основной организации
		Если Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
			ОтборОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
			ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
			ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация"); 
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Список, "ОтборКонтрагент", ОтборИнформация, ОтборИнформацияИспользование);
		
		// Связи параметров выбора договора
		УстановитьСвязиПараметровВыбораДоговораКонтрагента();
		ОтборКонтрагент = ОтборИнформация;
		
		// Видимость граф журнала
		Элементы.СписокОрганизация.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
		Элементы.СписокИнформация.Видимость  = Ложь;
		
	ИначеЕсли КлючНазначенияИспользования = "ДокументыПоДоговоруКонтрагента" Тогда
		
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru='Документы по договору';uk='Документи за договором'");
		
		// Отбор по договору
		ОтборДоговорКонтрагентаИспользование = Истина;
		Если Параметры.Отбор.Свойство("ДоговорКонтрагента", ОтборДоговорКонтрагента) Тогда
			Элементы.ГруппаОтборОрганизация.Видимость        = Ложь;
			Элементы.ГруппаОтборИнформация.Видимость         = Ложь;
			Элементы.ГруппаОтборДоговорКонтрагента.Видимость = Ложь;
			Параметры.Отбор.Удалить("ДоговорКонтрагента");
		КонецЕсли;
		
		// Значения отборов по организации и контрагенту для передачи в значения заполнения
		ОтборОрганизацияИспользование = Истина;
		ОтборИнформацияИспользование  = Истина;
		Если ЗначениеЗаполнено(ОтборДоговорКонтрагента) Тогда
			СвойстваДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОтборДоговорКонтрагента, "Владелец, Организация");
			ОтборИнформация  = СвойстваДоговора.Владелец;
			ОтборОрганизация = СвойстваДоговора.Организация;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Список, "ОтборДоговорКонтрагента", ОтборДоговорКонтрагента, ОтборДоговорКонтрагентаИспользование);
		
		// Видимость граф журнала
		Элементы.СписокОрганизация.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
		Элементы.СписокИнформация.Видимость  = Ложь;
		
	Иначе
		
		Элементы.ГруппаОтборДоговорКонтрагента.Видимость = Ложь;
		
		// Отбор по основной организации
		Если Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
			ОтборОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
			ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
			ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
		КонецЕсли;
		
		// Видимость граф журнала
		Элементы.СписокОрганизация.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
		
	КонецЕсли;
	
	// Заполнение группы информационных ссылок
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОтборОрганизация = Параметр;
		ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
		Если КлючНазначенияИспользования = "ДокументыПоКонтрагенту" Тогда
			УстановитьСвязиПараметровВыбораДоговораКонтрагента();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Строка") Или ПустаяСтрока(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	
	Если ЗначениеЗаполнено(ОтборДокумент) Тогда
		
		ПараметрыФормы.Вставить("Основание", ОтборДокумент);
		
		ОтборДокумент = Неопределено;
		
	Иначе
		
		ЗначенияЗаполнения = Новый Структура;
			
		Если ОтборОрганизацияИспользование Тогда
			ЗначенияЗаполнения.Вставить("Организация", ОтборОрганизация);
		КонецЕсли;
		
		Если ОтборИнформацияИспользование Тогда
			Если ТипИнформации = "Сотрудник" Тогда
				ЗначенияЗаполнения.Вставить("ФизЛицо", ОтборИнформация);
			Иначе
				Если ВыбранноеЗначение = "КорректировкаДолга" Тогда
					ЗначенияЗаполнения.Вставить("КонтрагентДебитор",  ОтборИнформация);
					ЗначенияЗаполнения.Вставить("КонтрагентКредитор", ОтборИнформация);
				Иначе
					ЗначенияЗаполнения.Вставить("Контрагент", ОтборИнформация);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ОтборДоговорКонтрагентаИспользование Тогда
			ЗначенияЗаполнения.Вставить("Контрагент", ОтборИнформация);
			ЗначенияЗаполнения.Вставить("ДоговорКонтрагента", ОтборДоговорКонтрагента);
		КонецЕсли;
		
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
	КонецЕсли; 
	
	ОткрытьФорму("Документ." + ВыбранноеЗначение + ".ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ПустаяСтрока(КлючНазначенияИспользования) Тогда
		
		Если ТипЗнч(Настройки["ОтборИнформация"]) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Если Элементы.ТипИнформации.СписокВыбора.НайтиПоЗначению("Сотрудник") <> Неопределено Тогда
				ТипИнформации = "Сотрудник";
			Иначе
				ТипИнформации                = "Контрагент";
				ОтборИнформация              = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
				ОтборИнформацияИспользование = Ложь;
			КонецЕсли;
		Иначе
			ТипИнформации = "Контрагент";
		КонецЕсли;
		
		УстановитьОграничениеТипаОтбораИнформации(ЭтотОбъект);
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Информация");
		
	Иначе
		// Восстанавливаем значения отбора для передачи в значения заполнения и связей параметров выбора договора
		ОтборИнформация = ОтборКонтрагент;
		ОтборИнформацияИспользование = ЗначениеЗаполнено(ОтборИнформация);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ТипИнформацииПриИзменении(Элемент)
	
	УстановитьОграничениеТипаОтбораИнформации(ЭтотОбъект);
	Если ТипИнформации = "ПодотчетноеЛицо" Тогда
		ОтборИнформация = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	Иначе
		ОтборИнформация = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;
	ОтборИнформацияИспользование = Ложь;
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Информация");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИнформацияИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Информация");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИнформацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтборИнформация) Тогда
		ОтборИнформацияИспользование = Истина;
	КонецЕсли;
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Информация");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
	Если КлючНазначенияИспользования = "ДокументыПоКонтрагенту" Тогда
		УстановитьСвязиПараметровВыбораДоговораКонтрагента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ОтборОрганизацияИспользование = Истина;
		Если КлючНазначенияИспользования = "ДокументыПоКонтрагенту" Тогда
			УстановитьСвязиПараметровВыбораДоговораКонтрагента();
		КонецЕсли;
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(ЭтотОбъект, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоговорКонтрагентаИспользованиеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "ОтборДоговорКонтрагента", ОтборДоговорКонтрагента, ОтборДоговорКонтрагентаИспользование);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборДоговорКонтрагентаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтборДоговорКонтрагента) Тогда
		ОтборДоговорКонтрагентаИспользование = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "ОтборДоговорКонтрагента", ОтборДоговорКонтрагента, ОтборДоговорКонтрагентаИспользование);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "СПИСОК"

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		
		Отказ = Истина;
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючНазначения", КлючНазначенияИспользования);
		
		Если ТекущиеДанные <> Неопределено Тогда
			ПараметрыФормы.Вставить("НачальноеЗначение", ТипЗнч(ТекущиеДанные.Ссылка));
		КонецЕсли;
		
		ОткрытьФорму("ЖурналДокументов.ЖурналОпераций.Форма.ВыборТипаДокумента", ПараметрыФормы, ЭтотОбъект, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	Если БухгалтерскийУчетКлиентСерверПереопределяемый.ЭтоРегламентнаяОперация(Элемент.ТекущаяСтрока)
		И Элемент.ТекущиеДанные <> Неопределено
		И Элемент.ТекущиеДанные.СостояниеДокумента = 1 Тогда
		Оповестить("ОбновитьЗакрытиеМесяца");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПереключитьАктивностьПроводок(Команда)

	ТекДанные = Элементы.Список.ТекущиеДанные;

	Если ТекДанные = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не выбран документ';uk='Не вибраний документ'"));
		Возврат;
	КонецЕсли;

	ПереключитьАктивностьПроводокСервер(ТекДанные.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОсновании(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначения", КлючНазначенияИспользования);
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОтборДокумент = ТекущиеДанные.Ссылка;
		ПараметрыФормы.Вставить("Основание", ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("ЖурналДокументов.ЖурналОпераций.Форма.ВыборТипаДокумента", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Процедура ПереключитьАктивностьПроводокСервер(ТекДокумент)

	БухгалтерскийУчет.ПереключитьАктивностьПроводокБУ(ТекДокумент);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаИнформационнуюСсылку(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаСсылкуВсеИнформационныеСсылки(Элемент)
	
	ИнформационныйЦентрКлиент.НажатиеНаСсылкуВсеИнформационныеСсылки(ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОграничениеТипаОтбораИнформации(Форма)

	Если Форма.ТипИнформации = "ПодотчетноеЛицо" Тогда
		Форма.Элементы.ОтборИнформация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	Иначе
		Форма.Элементы.ОтборИнформация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьСвязиПараметровВыбораДоговораКонтрагента()

	МассивСвязей = Новый Массив;
	
	Если ОтборИнформацияИспользование Тогда
		МассивСвязей.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "ОтборИнформация", РежимИзмененияСвязанногоЗначения.Очищать));
	КонецЕсли;
	
	Если ОтборОрганизацияИспользование Тогда
		МассивСвязей.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "ОтборОрганизация", РежимИзмененияСвязанногоЗначения.Очищать));
	КонецЕсли;
	
	Элементы.ОтборДоговорКонтрагента.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивСвязей);
	
КонецПроцедуры

&НаСервере
Функция ВернутьПараметрыОткрытия()
	Возврат Новый Структура("Ключ, Заголовок, Период, Организация", Список, "Реестр документов", Элементы.Список.Период, ОтборОрганизация);
КонецФункции

&НаКлиенте
Процедура ПечатьРеестра(Команда)
	ФормаПечатиРеестра = ПолучитьФорму("Отчет.РеестрДокументов.Форма.ФормаОтчета", ВернутьПараметрыОткрытия(), ЭтаФорма, Новый УникальныйИдентификатор);
	ФормаПечатиРеестра.Открыть();
КонецПроцедуры
